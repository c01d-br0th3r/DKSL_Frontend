{"version":3,"sources":["routes/Home/HomePresenter.tsx","apis.ts","routes/Home/index.tsx","routes/Home/HomeContainer.tsx","components/Record.tsx","components/Scoreboard.tsx","routes/Main/index.tsx","routes/NotFound/index.tsx","routes/Stat/StatPresenter.tsx","routes/Stat/index.tsx","routes/Stat/StatContainer.tsx","routes/Search/SearchPresenter.tsx","routes/Search/index.tsx","routes/Search/SearchContainer.tsx","routes/League/LeaguePresenter.tsx","routes/League/index.tsx","routes/League/LeagueContainer.tsx","routes/Records/RecordPresenter.tsx","routes/Records/index.tsx","routes/Records/RecordsContainer.tsx","components/Header.tsx","components/Router.tsx","components/GlobalStyle.tsx","components/App.tsx","serviceWorker.ts","index.tsx"],"names":["Wrapper","styled","div","LiveGames","Game","Team","VS","Title","Img","img","HomePresenter","live","console","log","settings","infinite","speed","slidesToShow","slidesToScroll","dots","useEffect","arrow","document","querySelectorAll","style","display","src","map","l","idx","key","to","away","name","split","score","nowInning","nowTopBottom","home","api","axios","create","baseURL","socketServer","apis","fetchLeague","get","fetchLeagueTeams","id","fetchTeamPlayers","fetchPlayerStat","fetchTeamInfo","fetchAllPlayers","fetchLiveGames","fetchTeamsByLeagueId","HomeContainer","useState","setLive","a","data","Away","Home","Name","Table","table","TitleTr","tr","Pinch","span","SLink","Link","Record","batterInfo","info","batters","batter","index","ID","now","stat","AB","H","_2B","_3B","RBI","R","HR","BB","HBP","pitcherInfo","pitcher","IP","ER","SO","NP","ScoreContainer","TeamScore","Score","VSContainer","Ground","Board","Inning","TotalScore","td","Scoreboard","awayHits","setAwayHits","homeHits","setHomeHits","awayErr","setAwayErr","homeErr","setHomeErr","awayBB","setAwayBB","homeBB","setHomeBB","awayBatterInfo","homeBatterInfo","forEach","E","totalScore","ground","s","socket","socketio","connect","inning","BroadcastContainer","ButtonContainer","Button","button","props","disabled","NavigationContainer","Nav","Textcast","Main","match","currentInning","setCurrentInning","isBroadcast","setIsBroadcast","emit","params","on","handleClick","e","target","parseInt","innerText","onClick","inn","dangerouslySetInnerHTML","__html","textCast","NotFound","TeamName","Birth","GroundWrapper","Info","Container","PlayerInfo","Total","TableWrapper","BtnWrapper","Batter","isOn","Pitcher","P","C","F","S","T","SS","LF","CF","RF","LC","RC","GO","FO","LO","BatterName","StatPresenter","isBatter","setIsBatter","isPitcher","setIsPitcher","batter_stat","i","player_info","p","pitcher_stat","calcAvg","rec","total","FRISTBASE","SECONDBASE","THIRDBASE","toFixed","teamName","playerName","backNum","birthday","substring","join","AVG","G","PA","TB","SB","CS","SAC","SF","IBB","GDP","SLG","OBP","OPS","yearly","y","year","ERA","W","L","HLD","SV","BK","Batters","K","WP","StatContainer","setStat","fetchStat","InputForm","Input","input","Btn","SearchPresenter","player","term","setTerm","filtered","setFiltered","page","setPage","pageData","setPageData","totalPage","setTotalPage","Math","ceil","length","start","end","slice","filter","includes","type","onChange","value","onKeyPress","className","playerId","Array","t","SearchContainer","setPlayer","LeaguePresenter","teams","team","teamId","LeagueContainer","league","setLeague","leagueId","setLeagueId","setTeams","fetchTeamsbyLeagueId","defaultValue","leagueName","RecordsPresenter","RecordsContainer","Menu","List","withRouter","menu","classList","contains","remove","add","querySelector","addEventListener","removeEventListener","Header","exact","path","component","League","Records","Stat","Search","GlobalStyle","createGlobalStyle","reset","App","Router","Boolean","window","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.dd6447db.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { INowLive } from \"../../interfaces/nowLive\";\nimport Slider from \"react-slick\";\nimport { Link } from \"react-router-dom\";\n\ninterface IHome {\n  live: INowLive[];\n}\n\nconst Wrapper = styled.div`\n  width: 100%;\n  margin-top: 20px;\n  padding: 0 20px;\n`;\n\nconst LiveGames = styled.div``;\n\nconst Game = styled.div`\n  display: flex !important;\n  justify-content: space-around;\n  align-items: center;\n  padding: 20px;\n  background-color: #f2f2f2;\n  border-radius: 5px;\n`;\n\nconst Team = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-weight: 600;\n  font-size: 14px;\n  div:nth-child(2) {\n    font-size: 22px;\n    margin-top: 5px;\n  }\n`;\n\nconst VS = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  div:nth-child(1) {\n    font-size: 16px;\n    font-weight: 600;\n    margin-bottom: 3px;\n  }\n  div:nth-child(2) {\n    font-size: 14px;\n    color: #2450aa;\n    font-weight: 700;\n  }\n`;\n\nconst Title = styled.div`\n  font-size: 18px;\n  font-weight: 600;\n  margin-bottom: 10px;\n`;\n\nconst Img = styled.img`\n  width: 100%;\n  margin-bottom: 20px;\n`;\n\nconst HomePresenter: React.FC<IHome> = ({ live }) => {\n  console.log(live);\n  const settings = {\n    infinite: false,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    dots: true,\n  };\n  useEffect(() => {\n    const arrow: any = document.querySelectorAll(\".slick-arrow\");\n    arrow[0].style.display = \"none\";\n    arrow[1].style.display = \"none\";\n  }, []);\n  return (\n    <div>\n      <Wrapper>\n        <Img src=\"https://s7d2.scene7.com/is/image/TWCNews/mlb_baseball_jpeg\" />\n        <Title>진행중인 게임</Title>\n        <LiveGames>\n          <Slider {...settings}>\n            {live.map((l, idx) => (\n              <div key={idx}>\n                <Link to={`live/${idx}`}>\n                  <Game>\n                    <Team>\n                      <div>{l.away.name.split(\" \")[0]}</div>\n                      <div>{l.away.score}</div>\n                    </Team>\n                    <VS>\n                      <div>vs</div>\n                      <div>\n                        {l.nowInning === 0\n                          ? \"경기 전\"\n                          : `${l.nowInning}회 ${l.nowTopBottom ? \"말\" : \"초\"}`}\n                      </div>\n                    </VS>\n                    <Team>\n                      <div>{l.home.name.split(\" \")[0]}</div>\n                      <div>{l.home.score}</div>\n                    </Team>\n                  </Game>\n                </Link>\n              </div>\n            ))}\n          </Slider>\n        </LiveGames>\n      </Wrapper>\n    </div>\n  );\n};\n\nexport default HomePresenter;\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"http://49.50.172.42:3001/\",\n});\n\nconst socketServer = axios.create({\n  baseURL: \"http://49.50.172.42:3002/\",\n});\n\nconst apis = {\n  fetchLeague: () => api.get(`getLeagues`),\n  fetchLeagueTeams: (id: number) => api.get(`getLeagueTeams/${id}`),\n  fetchTeamPlayers: (id: number) => api.get(`getTeamPlayers/${id}`),\n  fetchPlayerStat: (id: number) => api.get(`getPlayerStat/${id}`),\n  fetchTeamInfo: (id: number) => api.get(`getTeamInfo/${id}`),\n  fetchAllPlayers: () => api.get(`getPlayerInfo`),\n  fetchLiveGames: () => socketServer.get(`getLiveGames`),\n  fetchTeamsByLeagueId: (id: number) => api.get(`getLeagueTeams/${id}`),\n};\n\nexport default apis;\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","import React, { useState, useEffect } from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport apis from \"../../apis\";\nimport { INowLive } from \"../../interfaces/nowLive\";\n\nconst HomeContainer: React.FC<{}> = () => {\n  const [live, setLive] = useState<INowLive[] | null>(null);\n  useEffect(() => {\n    const fetchLiveGames = async () => {\n      try {\n        const { data: live } = await apis.fetchLiveGames();\n        setLive(live);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    fetchLiveGames();\n  }, []);\n  return (\n    <div>\n      {live === null ? <div>Loading...</div> : <HomePresenter live={live} />}\n    </div>\n  );\n};\n\nexport default HomeContainer;\n","import React from \"react\";\nimport { ILive } from \"../interfaces/live\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\ninterface IProps {\n  live: ILive;\n}\n\nconst Away = styled.div`\n  padding-bottom: 20px;\n`;\n\nconst Home = styled.div`\n  padding-bottom: 20px;\n`;\n\nconst Name = styled.div`\n  font-size: 20px;\n  font-weight: 700;\n  padding: 20px 0;\n  padding-left: 10px;\n`;\n\nconst Table = styled.table`\n  width: 100%;\n  td {\n    text-align: center;\n    padding: 10px 0;\n    padding-top: 13px;\n    font-size: 13px;\n    border-bottom: 1px solid #f2f2f2;\n  }\n`;\n\nconst TitleTr = styled.tr`\n  background-color: #2450aa;\n  color: #fff;\n  font-weight: 500;\n  font-size: 12px;\n`;\n\nconst Pinch = styled.span`\n  font-size: 10px;\n  opacity: 0.7;\n`;\n\nconst SLink = styled(Link)`\n  width: 100%;\n  text-align: center;\n`;\n\nconst Record: React.FC<IProps> = ({ live }) => {\n  return (\n    <div>\n      <Away>\n        <Name>{live.away.name}</Name>\n        <Table>\n          <tbody>\n            <TitleTr>\n              <td></td>\n              <td>타수</td>\n              <td>안타</td>\n              <td>2루타</td>\n              <td>3루타</td>\n              <td>타점</td>\n              <td>득점</td>\n              <td>홈런</td>\n              <td>볼넷</td>\n            </TitleTr>\n            {live.away.batterInfo.map((info) => {\n              return info.batters.map((batter, index) => (\n                <tr key={index}>\n                  <td>\n                    <SLink to={`/stat/${batter.ID}`}>\n                      {batter.name}{\" \"}\n                      {info.now !== 0 && index !== 0 && <Pinch>대</Pinch>}\n                    </SLink>\n                  </td>\n                  <td>{batter.stat.AB}</td>\n                  <td>{batter.stat.H}</td>\n                  <td>{batter.stat._2B}</td>\n                  <td>{batter.stat._3B}</td>\n                  <td>{batter.stat.RBI}</td>\n                  <td>{batter.stat.R}</td>\n                  <td>{batter.stat.HR}</td>\n                  <td>{batter.stat.BB + batter.stat.HBP}</td>\n                </tr>\n              ));\n            })}\n          </tbody>\n        </Table>\n        <Table>\n          <tbody>\n            <TitleTr>\n              <td></td>\n              <td>이닝</td>\n              <td>자책</td>\n              <td>볼넷</td>\n              <td>삼진</td>\n              <td>피안타</td>\n              <td>투구수</td>\n            </TitleTr>\n            {live.away.pitcherInfo.map((pitcher, index) => (\n              <tr key={index}>\n                <td>{pitcher.name}</td>\n                <td>{pitcher.stat.IP}</td>\n                <td>{pitcher.stat.ER}</td>\n                <td>{pitcher.stat.BB}</td>\n                <td>{pitcher.stat.SO}</td>\n                <td>{pitcher.stat.H}</td>\n                <td>{pitcher.stat.NP}</td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </Away>\n      <Home>\n        <Name>{live.home.name}</Name>\n        <Table>\n          <tbody>\n            <TitleTr>\n              <td></td>\n              <td>타수</td>\n              <td>안타</td>\n              <td>2루타</td>\n              <td>3루타</td>\n              <td>타점</td>\n              <td>득점</td>\n              <td>홈런</td>\n              <td>볼넷</td>\n            </TitleTr>\n            {live.home.batterInfo.map((info) => {\n              return info.batters.map((batter, index) => (\n                <tr key={index}>\n                  <td>\n                    <SLink to={`/stat/${batter.ID}`}>\n                      {batter.name}{\" \"}\n                      {info.now !== 0 && index !== 0 && <Pinch>대</Pinch>}\n                    </SLink>\n                  </td>\n                  <td>{batter.stat.AB}</td>\n                  <td>{batter.stat.H}</td>\n                  <td>{batter.stat._2B}</td>\n                  <td>{batter.stat._3B}</td>\n                  <td>{batter.stat.RBI}</td>\n                  <td>{batter.stat.R}</td>\n                  <td>{batter.stat.HR}</td>\n                  <td>{batter.stat.BB + batter.stat.HBP}</td>\n                </tr>\n              ));\n            })}\n          </tbody>\n        </Table>\n        <Table>\n          <tbody>\n            <TitleTr>\n              <td></td>\n              <td>이닝</td>\n              <td>자책</td>\n              <td>볼넷</td>\n              <td>삼진</td>\n              <td>피안타</td>\n              <td>투구수</td>\n            </TitleTr>\n            {live.home.pitcherInfo.map((pitcher, index) => (\n              <tr key={index}>\n                <td>{pitcher.name}</td>\n                <td>{pitcher.stat.IP}</td>\n                <td>{pitcher.stat.ER}</td>\n                <td>{pitcher.stat.BB}</td>\n                <td>{pitcher.stat.SO}</td>\n                <td>{pitcher.stat.H}</td>\n                <td>{pitcher.stat.NP}</td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </Home>\n    </div>\n  );\n};\n\nexport default Record;\n","import React, { useState, useEffect } from \"react\";\nimport { ILive } from \"../interfaces/live\";\nimport styled from \"styled-components\";\n\ninterface IProps {\n  live: ILive;\n}\n\nconst ScoreContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 25px 5px;\n  background-color: #2450aa;\n  color: #fff;\n`;\n\nconst TeamScore = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Team = styled.div`\n  font-size: 15px;\n  font-weight: 600;\n  margin-bottom: 15px;\n  opacity: 0.8;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  div:nth-child(1) {\n    margin-bottom: 5px;\n  }\n`;\n\nconst Score = styled.div`\n  font-size: 44px;\n  font-weight: 700;\n`;\n\nconst VSContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  font-size: 16px;\n  font-weight: 700;\n  position: relative;\n`;\n\nconst Ground = styled.div`\n  width: 100%;\n  position: absolute;\n  top: 25px;\n  font-size: 12px;\n  font-weight: 500;\n  opacity: 0.8;\n  text-align: center;\n`;\n\nconst Board = styled.div`\n  width: 100%;\n  background-color: #1d4aa1;\n  color: #fff;\n  padding: 10px 5px;\n  display: flex;\n  justify-content: center;\n  font-size: 14px;\n`;\n\nconst Table = styled.table`\n  width: 100%;\n  text-align: center;\n  td {\n    padding: 5px 4px;\n  }\n`;\n\nconst Inning = styled.tr`\n  opacity: 0.7;\n  td {\n    padding-bottom: 10px;\n  }\n`;\n\nconst TotalScore = styled.td`\n  color: #7efff5;\n`;\n\nconst Scoreboard: React.FC<IProps> = ({ live }) => {\n  const [awayHits, setAwayHits] = useState<number>(0);\n  const [homeHits, setHomeHits] = useState<number>(0);\n  const [awayErr, setAwayErr] = useState<number>(0);\n  const [homeErr, setHomeErr] = useState<number>(0);\n  const [awayBB, setAwayBB] = useState<number>(0);\n  const [homeBB, setHomeBB] = useState<number>(0);\n  useEffect(() => {\n    const awayBatterInfo = live.away.batterInfo;\n    const homeBatterInfo = live.home.batterInfo;\n    let awayHits = 0,\n      homeHits = 0,\n      awayErr = 0,\n      homeErr = 0,\n      awayBB = 0,\n      homeBB = 0;\n    awayBatterInfo.forEach((away) => {\n      away.batters.forEach((batter) => {\n        awayHits += batter.stat.H;\n        awayErr += batter.stat.E;\n        awayBB += batter.stat.BB;\n        awayBB += batter.stat.HBP;\n      });\n    });\n    homeBatterInfo.forEach((home) => {\n      home.batters.forEach((batter) => {\n        homeHits += batter.stat.H;\n        homeErr += batter.stat.E;\n        homeBB += batter.stat.BB;\n        homeBB += batter.stat.HBP;\n      });\n    });\n    setAwayHits(awayHits);\n    setHomeHits(homeHits);\n    setAwayErr(awayErr);\n    setHomeErr(homeErr);\n    setAwayBB(awayBB);\n    setHomeBB(homeBB);\n  }, [live]);\n  return (\n    <div>\n      <ScoreContainer>\n        <TeamScore>\n          <Team>\n            <div>{live.away.name.split(\" \")[0]}</div>\n            <div>{live.away.name.split(\" \")[1]}</div>\n          </Team>\n          <Score>{live.away.totalScore}</Score>\n        </TeamScore>\n        <VSContainer>\n          <div>VS</div>\n          <Ground>{live.ground}</Ground>\n        </VSContainer>\n        <TeamScore>\n          <Team>\n            <div>{live.home.name.split(\" \")[0]}</div>\n            <div>{live.home.name.split(\" \")[1]}</div>\n          </Team>\n          <Score>{live.home.totalScore}</Score>\n        </TeamScore>\n      </ScoreContainer>\n      <Board>\n        <Table>\n          <tbody>\n            <Inning>\n              <td></td>\n              <td>1</td>\n              <td>2</td>\n              <td>3</td>\n              <td>4</td>\n              <td>5</td>\n              <td>6</td>\n              <td>7</td>\n              <td>8</td>\n              <td>9</td>\n              <TotalScore>R</TotalScore>\n              <td>H</td>\n              <td>E</td>\n              <td>B</td>\n            </Inning>\n            <tr>\n              <td>{live.away.name.split(\" \")[0]}</td>\n              {live.away.score.map((s, index) => (\n                <td key={index}>{live.nowInning - 1 >= index ? s : \"\"}</td>\n              ))}\n              <TotalScore>{live.away.totalScore}</TotalScore>\n              <td>{awayHits}</td>\n              <td>{homeErr}</td>\n              <td>{awayBB}</td>\n            </tr>\n            <tr>\n              <td>{live.home.name.split(\" \")[0]}</td>\n              {live.home.score.map((s, index) => (\n                <td key={index}>\n                  {live.nowInning - 1 > index\n                    ? s\n                    : live.nowInning - 1 === index && live.nowTopBottom\n                    ? s\n                    : \"\"}\n                </td>\n              ))}\n              <TotalScore>{live.home.totalScore}</TotalScore>\n              <td>{homeHits}</td>\n              <td>{awayErr}</td>\n              <td>{homeBB}</td>\n            </tr>\n          </tbody>\n        </Table>\n      </Board>\n    </div>\n  );\n};\n\nexport default Scoreboard;\n","import React, { useState, useEffect } from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport socketio from \"socket.io-client\";\nimport styled from \"styled-components\";\nimport { ILive } from \"../..//interfaces/live\";\nimport Record from \"../../components/Record\";\nimport Scoreboard from \"../../components/Scoreboard\";\nimport \"./Main.css\";\n\nconst socket: any = socketio.connect(\"http://49.50.172.42:3002/\");\nconst inning: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\ninterface MatchParams {\n  id: string;\n}\n\nconst BroadcastContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ButtonContainer = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  background-color: #5d93d2;\n  overflow: scroll;\n`;\n\nconst Button: any = styled.button`\n  width: 100%;\n  padding: 10px 0;\n  background-color: ${(props) => (props.disabled ? \"#5d93d2\" : \"#1D4AA0\")};\n  color: #fff;\n  font-weight: 600;\n  opacity: ${(props) => (props.disabled ? \"0.7\" : \"1\")};\n  border: none;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: ${(props) => (props.disabled ? \"default\" : \"pointer\")}; ;\n`;\n\nconst NavigationContainer = styled.div`\n  width: 100%;\n  display: flex;\n`;\n\nconst Nav: any = styled.button`\n  width: 100%;\n  background-color: #2450aa;\n  border: none;\n  padding: 10px;\n  color: #fff;\n  font-weight: 500;\n  cursor: pointer;\n`;\n\nconst Textcast = styled.div`\n  padding: 10px;\n`;\n\nconst Main: React.FC<RouteComponentProps<MatchParams>> = ({ match }) => {\n  const [live, setLive] = useState<ILive | null>(null);\n  const [currentInning, setCurrentInning] = useState<number>(-1);\n  const [isBroadcast, setIsBroadcast] = useState<boolean>(true);\n  useEffect(() => {\n    socket.emit(\"joinLive\", match.params.id);\n    socket.emit(\"getLiveCast\", match.params.id);\n    // 전송 누를 때마다\n    socket.on(\"sendLiveCast\", (live: ILive) => {\n      console.log(live);\n      setLive(live);\n      setCurrentInning(live.nowInning);\n    });\n    socket.on(\"liveCast\", (live: ILive) => {\n      console.log(live);\n      setLive(live);\n      setCurrentInning(live.nowInning);\n    });\n  }, []);\n  const handleClick = (e: any) => {\n    const target = e.target as HTMLButtonElement;\n    setCurrentInning(parseInt(target.innerText));\n  };\n  useEffect(() => {\n    console.log(currentInning);\n  }, [currentInning]);\n  return (\n    <div>\n      {live === null ? (\n        <div>No Game</div>\n      ) : (\n        <>\n          <Scoreboard live={{ ...live }} />\n          <NavigationContainer>\n            <Nav onClick={() => setIsBroadcast(true)}>중계</Nav>\n            <Nav onClick={() => setIsBroadcast(false)}>기록</Nav>\n          </NavigationContainer>\n          {isBroadcast ? (\n            <BroadcastContainer>\n              <ButtonContainer>\n                {inning.map((inn) => (\n                  <Button\n                    inning={inn}\n                    key={inn}\n                    onClick={handleClick}\n                    disabled={live.nowInning < inn}\n                  >\n                    {`${inn}회`}\n                  </Button>\n                ))}\n              </ButtonContainer>\n              <Textcast\n                dangerouslySetInnerHTML={{\n                  __html:\n                    currentInning === -1\n                      ? live.textCast[0]\n                      : live.textCast[currentInning - 1],\n                }}\n              />\n            </BroadcastContainer>\n          ) : (\n            <Record live={live} />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Main;\n","import React from \"react\";\n\nconst NotFound: React.FC<{}> = () => {\n  return <div>404 Not Found</div>;\n};\n\nexport default NotFound;\n","import React, { useState } from \"react\";\nimport { IStat } from \"../../interfaces/stat\";\nimport styled from \"styled-components\";\n\ninterface IStatProps {\n  stat: IStat;\n}\n\nconst TeamName = styled.div`\n  font-size: 18px;\n  font-weight: 600;\n  margin-bottom: 10px;\n`;\n\nconst Name = styled.div`\n  font-size: 16px;\n  font-weight: 500;\n  margin-bottom: 10px;\n`;\n\nconst Birth = styled.div``;\n\nconst Img = styled.div`\n  width: 100%;\n  height: 200px;\n  border: 1px solid gray;\n  margin-right: 30px;\n`;\n\nconst GroundWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Ground = styled.div`\n  margin-top: 20px;\n  width: 350px;\n  height: 350px;\n  position: relative;\n  background: url(\"/images/ground.png\");\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: center;\n  color: #fff;\n  font-weight: 600;\n  div {\n    font-size: 14px;\n  }\n`;\n\nconst GroundImg = styled.img`\n  width: 100%;\n  position: relative;\n`;\n\nconst Info = styled.div`\n  width: 100%;\n  text-align: left;\n`;\n\nconst Container = styled.div`\n  width: 100%;\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst PlayerInfo = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 10px;\n  margin-bottom: 10px;\n`;\n\nconst Total = styled.div`\n  font-size: 20px;\n  font-weight: 600;\n  margin: 20px 0;\n`;\n\nconst Record = styled.div`\n  width: 100%;\n  font-size: 16px;\n`;\n\nconst TableWrapper = styled.div`\n  width: 100%;\n  overflow: scroll;\n  margin-bottom: 20px;\n`;\n\nconst Table = styled.table`\n  width: 100%;\n  td {\n    text-align: center;\n    padding: 10px 15px;\n    padding-top: 12px;\n    white-space: nowrap;\n    font-weight: 500;\n  }\n  tr:nth-child(1) {\n    background-color: #2450aa;\n    color: #fff;\n    font-weight: 600;\n  }\n`;\n\nconst BtnWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  margin-bottom: 10px;\n  font-weight: 600;\n`;\n\nconst Batter: any = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  border-right: 1px solid #c2c2c2;\n  color: ${(props: any) => (props.isOn ? \"#2450aa\" : \"#000\")};\n`;\n\nconst Pitcher: any = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  color: ${(props: any) => (props.isOn ? \"#2450aa\" : \"#000\")};\n`;\n\nconst P = styled.div`\n  position: absolute;\n  top: 59%;\n  left: 45%;\n  color: #000;\n`;\nconst C = styled.div`\n  position: absolute;\n  top: 78%;\n  left: 45%;\n  color: #000;\n`;\nconst F = styled.div`\n  position: absolute;\n  top: 59%;\n  left: 63%;\n  color: #000;\n`;\nconst S = styled.div`\n  position: absolute;\n  top: 45%;\n  left: 56%;\n  color: #000;\n`;\nconst T = styled.div`\n  position: absolute;\n  top: 59%;\n  left: 25%;\n  color: #000;\n`;\nconst SS = styled.div`\n  position: absolute;\n  top: 45%;\n  left: 32%;\n  color: #000;\n`;\nconst LF = styled.div`\n  position: absolute;\n  top: 30%;\n  left: 18%;\n`;\nconst CF = styled.div`\n  position: absolute;\n  top: 23%;\n  left: 45%;\n`;\nconst RF = styled.div`\n  position: absolute;\n  top: 30%;\n  left: 72%;\n`;\nconst LC = styled.div`\n  position: absolute;\n  top: 20%;\n  left: 27%;\n`;\nconst RC = styled.div`\n  position: absolute;\n  top: 20%;\n  left: 65%;\n`;\nconst GO = styled.div`\n  color: #000;\n  position: absolute;\n  bottom: 17%;\n  left: 5%;\n`;\nconst FO = styled.div`\n  color: #000;\n  position: absolute;\n  bottom: 12%;\n  left: 5%;\n`;\nconst LO = styled.div`\n  color: #000;\n  position: absolute;\n  bottom: 7%;\n  left: 5%;\n`;\nconst BatterName = styled.div`\n  color: #000;\n  position: absolute;\n  bottom: 22%;\n  left: 5%;\n  font-weight: 600;\n`;\n\nconst StatPresenter: React.FC<IStatProps> = ({ stat }) => {\n  const [isBatter, setIsBatter] = useState<boolean>(true);\n  const [isPitcher, setIsPitcher] = useState<boolean>(false);\n  console.log(stat);\n  const { batter_stat: s, player_info: i, pitcher_stat: p } = stat;\n  const handleBatter = () => {\n    setIsBatter(true);\n    setIsPitcher(false);\n  };\n  const handlePitcher = () => {\n    setIsBatter(false);\n    setIsPitcher(true);\n  };\n  const calcAvg = (rec: number) => {\n    const total =\n      s.total.P +\n      s.total.C +\n      s.total.FRISTBASE +\n      s.total.SECONDBASE +\n      s.total.THIRDBASE +\n      s.total.SS +\n      s.total.LF +\n      s.total.CF +\n      s.total.RF +\n      s.total.LC +\n      s.total.RC;\n    return `${((rec / total) * 100).toFixed(1)}%`;\n  };\n  return (\n    <>\n      <Container>\n        <PlayerInfo>\n          <Img>stat.img</Img>\n          <Info>\n            <TeamName>{i.teamName}</TeamName>\n            <Name>\n              {i.playerName} No. {i.backNum}\n            </Name>\n            <Birth>{i.birthday.substring(0, 10).split(\"-\").join(\"/\")}</Birth>\n          </Info>\n        </PlayerInfo>\n        <Record>\n          <Total>선수 기록 - {isBatter ? \"타자\" : \"투수\"}</Total>\n          <BtnWrapper>\n            <Batter onClick={handleBatter} isOn={isBatter}>\n              타자\n            </Batter>\n            <Pitcher onClick={handlePitcher} isOn={isPitcher}>\n              투수\n            </Pitcher>\n          </BtnWrapper>\n          {isBatter ? (\n            <>\n              <TableWrapper>\n                <Table>\n                  <tbody>\n                    <tr>\n                      <td>시즌</td>\n                      <td>AVG</td>\n                      <td>G</td>\n                      <td>PA</td>\n                      <td>AB</td>\n                      <td>R</td>\n                      <td>H</td>\n                      <td>2B</td>\n                      <td>3B</td>\n                      <td>HR</td>\n                      <td>TB</td>\n                      <td>RBI</td>\n                      <td>SB</td>\n                      <td>CS</td>\n                      <td>SAC</td>\n                      <td>SF</td>\n                      <td>BB</td>\n                      <td>IBB</td>\n                      <td>HBP</td>\n                      <td>SO</td>\n                      <td>GDP</td>\n                      <td>SLG</td>\n                      <td>OBP</td>\n                      <td>OPS</td>\n                    </tr>\n                    <tr>\n                      <td>통산</td>\n                      <td>{s.total.AVG && s.total.AVG.toFixed(3)}</td>\n                      <td>{s.total.G}</td>\n                      <td>{s.total.PA}</td>\n                      <td>{s.total.AB}</td>\n                      <td>{s.total.R}</td>\n                      <td>{s.total.H}</td>\n                      <td>{s.total._2B}</td>\n                      <td>{s.total._3B}</td>\n                      <td>{s.total.HR}</td>\n                      <td>{s.total.TB}</td>\n                      <td>{s.total.RBI}</td>\n                      <td>{s.total.SB}</td>\n                      <td>{s.total.CS}</td>\n                      <td>{s.total.SAC}</td>\n                      <td>{s.total.SF}</td>\n                      <td>{s.total.BB}</td>\n                      <td>{s.total.IBB}</td>\n                      <td>{s.total.HBP}</td>\n                      <td>{s.total.SO}</td>\n                      <td>{s.total.GDP}</td>\n                      <td>{s.total.SLG && s.total.SLG.toFixed(3)}</td>\n                      <td>{s.total.OBP && s.total.OBP.toFixed(3)}</td>\n                      <td>{s.total.OPS && s.total.OPS.toFixed(3)}</td>\n                    </tr>\n                    {s.yearly.map((y) => (\n                      <tr key={y.year}>\n                        <td>{y.year}</td>\n                        <td>{y.AVG && y.AVG.toFixed(3)}</td>\n                        <td>{y.G}</td>\n                        <td>{y.PA}</td>\n                        <td>{y.AB}</td>\n                        <td>{y.R}</td>\n                        <td>{y.H}</td>\n                        <td>{y._2B}</td>\n                        <td>{y._3B}</td>\n                        <td>{y.HR}</td>\n                        <td>{y.TB}</td>\n                        <td>{y.RBI}</td>\n                        <td>{y.SB}</td>\n                        <td>{y.CS}</td>\n                        <td>{y.SAC}</td>\n                        <td>{y.SF}</td>\n                        <td>{y.BB}</td>\n                        <td>{y.IBB}</td>\n                        <td>{y.HBP}</td>\n                        <td>{y.SO}</td>\n                        <td>{y.GDP}</td>\n                        <td>{y.SLG && y.SLG.toFixed(3)}</td>\n                        <td>{y.OBP && y.OBP.toFixed(3)}</td>\n                        <td>{y.OPS && y.OPS.toFixed(3)}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </Table>\n              </TableWrapper>\n              <Total>타구 분포도</Total>\n              <GroundWrapper>\n                <Ground>\n                  <P>{calcAvg(s.total.P)}</P>\n                  <C>{calcAvg(s.total.C)}</C>\n                  <F>{calcAvg(s.total.FRISTBASE)}</F>\n                  <S>{calcAvg(s.total.SECONDBASE)}</S>\n                  <T>{calcAvg(s.total.THIRDBASE)}</T>\n                  <SS>{calcAvg(s.total.SS)}</SS>\n                  <LF>{calcAvg(s.total.LF)}</LF>\n                  <CF>{calcAvg(s.total.CF)}</CF>\n                  <RF>{calcAvg(s.total.RF)}</RF>\n                  <LC>{calcAvg(s.total.LC)}</LC>\n                  <RC>{calcAvg(s.total.RC)}</RC>\n                  <GO>GO: {s.total.GO}</GO>\n                  <FO>FO: {s.total.FO}</FO>\n                  <LO>LO: {s.total.LO}</LO>\n                  <BatterName>{i.playerName}</BatterName>\n                </Ground>\n              </GroundWrapper>\n            </>\n          ) : (\n            <TableWrapper>\n              <Table>\n                <tbody>\n                  <tr>\n                    <td>시즌</td>\n                    <td>ERA</td>\n                    <td>G</td>\n                    <td>W</td>\n                    <td>L</td>\n                    <td>HLD</td>\n                    <td>SV</td>\n                    <td>IP</td>\n                    <td>H</td>\n                    <td>AB</td>\n                    <td>BB</td>\n                    <td>BK</td>\n                    <td>Batters</td>\n                    <td>ER</td>\n                    <td>HBP</td>\n                    <td>HR</td>\n                    <td>K</td>\n                    <td>NP</td>\n                    <td>R</td>\n                    <td>SAC</td>\n                    <td>SF</td>\n                    <td>WP</td>\n                  </tr>\n                  <tr>\n                    <td>통산</td>\n                    <td>{p.total.ERA && p.total.ERA.toFixed(2)}</td>\n                    <td>{p.total.G}</td>\n                    <td>{p.total.W}</td>\n                    <td>{p.total.L}</td>\n                    <td>{p.total.HLD}</td>\n                    <td>{p.total.SV}</td>\n                    <td>{p.total.IP}</td>\n                    <td>{p.total.H}</td>\n                    <td>{p.total.AB}</td>\n                    <td>{p.total.BB}</td>\n                    <td>{p.total.BK}</td>\n                    <td>{p.total.Batters}</td>\n                    <td>{p.total.ER}</td>\n                    <td>{p.total.HBP}</td>\n                    <td>{p.total.HR}</td>\n                    <td>{p.total.K}</td>\n                    <td>{p.total.NP}</td>\n                    <td>{p.total.R}</td>\n                    <td>{p.total.SAC}</td>\n                    <td>{p.total.SF}</td>\n                    <td>{p.total.WP}</td>\n                  </tr>\n                  {p.yearly.map((y) => (\n                    <tr key={y.year}>\n                      <td>{y.year}</td>\n                      <td>{y.ERA && y.ERA.toFixed(2)}</td>\n                      <td>{y.G}</td>\n                      <td>{y.W}</td>\n                      <td>{y.L}</td>\n                      <td>{y.HLD}</td>\n                      <td>{y.SV}</td>\n                      <td>{y.IP}</td>\n                      <td>{y.H}</td>\n                      <td>{y.AB}</td>\n                      <td>{y.BB}</td>\n                      <td>{y.BK}</td>\n                      <td>{y.Batters}</td>\n                      <td>{y.ER}</td>\n                      <td>{y.HBP}</td>\n                      <td>{y.HR}</td>\n                      <td>{y.K}</td>\n                      <td>{y.NP}</td>\n                      <td>{y.R}</td>\n                      <td>{y.SAC}</td>\n                      <td>{y.SF}</td>\n\n                      <td>{y.WP}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </Table>\n            </TableWrapper>\n          )}\n        </Record>\n      </Container>\n    </>\n  );\n};\n\nexport default StatPresenter;\n","import StatContainer from \"./StatContainer\";\n\nexport default StatContainer;\n","import React, { useState, useEffect } from \"react\";\nimport StatPresenter from \"./StatPresenter\";\nimport { IStat } from \"../../interfaces/stat\";\nimport apis from \"../../apis\";\nimport { RouteComponentProps } from \"react-router-dom\";\n\ninterface MatchProps {\n  id: string;\n}\n\nconst StatContainer: React.FC<RouteComponentProps<MatchProps>> = ({\n  match,\n}) => {\n  const [stat, setStat] = useState<IStat | null>(null);\n  useEffect(() => {\n    const fetchStat = async (id: number) => {\n      try {\n        const { data: stat } = await apis.fetchPlayerStat(id);\n        setStat(stat);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    const id = parseInt(match.params.id);\n    fetchStat(id);\n  }, []);\n  return (\n    <div>\n      {stat === null ? <div>Loading...</div> : <StatPresenter stat={stat} />}\n    </div>\n  );\n};\n\nexport default StatContainer;\n","import React, { useState, useEffect } from \"react\";\nimport { IPlayerInfo } from \"../../interfaces/stat\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nlet dataPerPage = 30;\n\ninterface ISearch {\n  player: IPlayerInfo[];\n}\n\nconst Wrapper = styled.div`\n  padding: 20px;\n`;\n\nconst Title = styled.div`\n  font-size: 20px;\n  font-weight: 600;\n  margin-top: 10px;\n  margin-bottom: 20px;\n`;\n\nconst InputForm = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  outline: none;\n  border: none;\n  border: 2px solid #c2c2c2;\n  font-size: 18px;\n  padding: 5px 10px;\n  margin-right: 15px;\n`;\n\nconst Btn = styled.div`\n  opacity: 0.7;\n  font-size: 18px;\n`;\n\nconst TableWrapper = styled.div`\n  width: 100%;\n  overflow: scroll;\n`;\n\nconst Table = styled.table`\n  width: 100%;\n  tr:nth-child(1) {\n    background-color: #2450aa;\n    color: #fff;\n    font-weight: 600;\n    white-space: nowrap;\n  }\n  td {\n    text-align: center;\n    padding: 10px;\n    padding-top: 12px;\n    border-bottom: 1px solid #f2f2f2;\n  }\n`;\n\nconst SLink = styled(Link)`\n  width: 100%;\n`;\n\nconst SearchPresenter: React.FC<ISearch> = ({ player }) => {\n  const [term, setTerm] = useState<string>(\"\");\n  const [filtered, setFiltered] = useState<IPlayerInfo[] | null>(null);\n  const [page, setPage] = useState<number>(0);\n  const [pageData, setPageData] = useState<IPlayerInfo[] | null>(null);\n  const [totalPage, setTotalPage] = useState<number>(0);\n\n  useEffect(() => {\n    setTotalPage(Math.ceil(player.length / dataPerPage));\n    setPage(0);\n  }, []);\n\n  useEffect(() => {\n    const start = page * dataPerPage;\n    const end = page * dataPerPage + dataPerPage;\n    if (!filtered) {\n      setPageData(player.slice(start, end));\n    } else {\n      setPageData(filtered.slice(start, end));\n    }\n  }, [page]);\n\n  const handlePageClick = (e: React.MouseEvent<HTMLDivElement>) => {\n    const target = e.target as HTMLButtonElement;\n    setPage(parseInt(target.innerText) - 1);\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setTerm(e.target.value);\n  };\n  const handleClick = () => {\n    const start = page * dataPerPage;\n    const end = page * dataPerPage + dataPerPage;\n    if (term === \"\") {\n      setFiltered(null);\n      setPage(0);\n      setTotalPage(Math.ceil(player.length / dataPerPage));\n      setPageData(player.slice(start, end));\n      return -1;\n    }\n    const filtered = player.filter(\n      (p) => p.playerName.includes(term) || p.teamName.includes(term)\n    );\n    setPage(0);\n    setTotalPage(Math.ceil(filtered.length / dataPerPage));\n    setFiltered(filtered);\n    setPageData(filtered.slice(start, end));\n  };\n\n  const handleKeyPress = (e: any) => {\n    if (e.key === \"Enter\") handleClick();\n  };\n  return (\n    <Wrapper>\n      <Title>선수 정보</Title>\n      <InputForm>\n        <Input\n          type=\"text\"\n          onChange={handleChange}\n          onKeyPress={handleKeyPress}\n        />\n        <Btn onClick={handleClick}>\n          <i className=\"fas fa-search\"></i>\n        </Btn>\n      </InputForm>\n      <div>\n        <div></div>\n        {pageData === null ? (\n          <div>Loading...</div>\n        ) : (\n          <TableWrapper>\n            <Table>\n              <tbody>\n                <tr>\n                  <td>선수명</td>\n                  <td>소속</td>\n                  <td>등번호</td>\n                </tr>\n                {pageData.map((p) => (\n                  <tr key={p.playerId}>\n                    <td>\n                      <SLink to={`/stat/${p.playerId}`}>{p.playerName}</SLink>\n                    </td>\n                    <td>\n                      <SLink to={`/stat/${p.playerId}`}>{p.teamName}</SLink>\n                    </td>\n                    <td>\n                      <SLink to={`/stat/${p.playerId}`}>{p.backNum}</SLink>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          </TableWrapper>\n        )}\n        {totalPage !== 0 && (\n          <div onClick={handlePageClick}>\n            {[...Array(totalPage)].map((t, i) => (\n              <button key={i}>{i + 1}</button>\n            ))}\n          </div>\n        )}\n      </div>\n    </Wrapper>\n  );\n};\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import React, { useState, useEffect } from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport apis from \"../../apis\";\nimport { IPlayerInfo } from \"../../interfaces/stat\";\n\nconst SearchContainer: React.FC<{}> = () => {\n  const [player, setPlayer] = useState<IPlayerInfo[] | null>(null);\n  useEffect(() => {\n    const fetchAllPlayers = async () => {\n      try {\n        const { data: player } = await apis.fetchAllPlayers();\n        setPlayer(player);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    fetchAllPlayers();\n  }, []);\n\n  return (\n    <div>\n      {player === null ? (\n        <div>Loading...</div>\n      ) : (\n        <>\n          <SearchPresenter player={player} />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default SearchContainer;\n","import React, { useState } from \"react\";\nimport { ITeamInfo } from \"../../interfaces/team\";\n\ninterface IProps {\n  teams: ITeamInfo[];\n}\n\nconst LeaguePresenter: React.FC<IProps> = ({ teams }) => {\n  const [term, setTerm] = useState<string>(\"\");\n  console.log(teams);\n  return (\n    <div>\n      <input type=\"text\" />\n      <div>\n        {teams.map((team) => (\n          <div key={team.teamId}>{team.teamName}</div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default LeaguePresenter;\n","import LeagueContainer from \"./LeagueContainer\";\n\nexport default LeagueContainer;\n","import React, { useState, useEffect, ChangeEvent } from \"react\";\nimport apis from \"../../apis\";\nimport LeaguePresenter from \"./LeaguePresenter\";\nimport { ITeamInfo } from \"../../interfaces/team\";\n\ninterface ILeague {\n  leagueId: number;\n  leagueName: string;\n}\n\nconst LeagueContainer: React.FC<{}> = () => {\n  const [league, setLeague] = useState<ILeague[] | null>(null);\n  const [leagueId, setLeagueId] = useState<number>(0);\n  const [teams, setTeams] = useState<ITeamInfo[] | null>(null);\n  useEffect(() => {\n    const fetchLeague = async () => {\n      try {\n        const { data: league } = await apis.fetchLeague();\n        setLeague(league);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    fetchLeague();\n  }, []);\n  useEffect(() => {\n    const fetchTeamsbyLeagueId = async () => {\n      if (leagueId > 0) {\n        try {\n          const { data: teams } = await apis.fetchTeamsByLeagueId(leagueId);\n          setTeams(teams);\n        } catch (e) {\n          console.log(e);\n        }\n      } else if (leagueId === 0) {\n        setTeams(null);\n      }\n    };\n    fetchTeamsbyLeagueId();\n  }, [leagueId]);\n  const handleChange = (e: ChangeEvent<HTMLSelectElement>) => {\n    setLeagueId(parseInt(e.target.value));\n  };\n  return (\n    <div>\n      {league === null ? (\n        <div>Loading ... </div>\n      ) : (\n        <div>\n          <select onChange={handleChange} defaultValue=\"0\">\n            <option value=\"0\">리그 선택</option>\n            {league.map((l) => (\n              <option value={l.leagueId} key={l.leagueId}>\n                {l.leagueName}\n              </option>\n            ))}\n          </select>\n          {leagueId === 0 ? (\n            <div></div>\n          ) : (\n            <div>\n              {teams === null ? (\n                <div>Loading...</div>\n              ) : (\n                <LeaguePresenter teams={teams} />\n              )}\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default LeagueContainer;\n","import React from \"react\";\n\nconst RecordsPresenter: React.FC<{}> = () => {\n  return <div>REcords</div>;\n};\n\nexport default RecordsPresenter;\n","import RecordsContainer from \"./RecordsContainer\";\n\nexport default RecordsContainer;\n","import React from \"react\";\nimport RecordsPresenter from \"./RecordPresenter\";\n\nconst RecordsContainer: React.FC<{}> = () => {\n  return (\n    <div>\n      <RecordsPresenter />\n    </div>\n  );\n};\n\nexport default RecordsContainer;\n","import React, { useEffect } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 20px;\n  background-color: #2450aa;\n  color: #fff;\n  font-size: 18px;\n  font-weight: 700;\n`;\n\nconst Menu = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  background-color: #2450aa;\n  font-weight: 500;\n  display: none;\n  padding: 10px 20px;\n  color: #fff;\n`;\n\nconst List = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 10px 0;\n  padding-top: 12px;\n  border-bottom: 1px solid #d2d2d2;\n  &:last-child {\n    border: none;\n  }\n`;\n\nexport default withRouter((props) => {\n  useEffect(() => {\n    const handleClick = () => {\n      if (menu.classList.contains(\"hide\")) {\n        menu.classList.remove(\"hide\");\n        menu.style.display = \"block\";\n      } else {\n        menu.classList.add(\"hide\");\n        menu.style.display = \"none\";\n      }\n    };\n    const menu: HTMLDivElement = document.querySelector(\n      \".menu\"\n    ) as HTMLDivElement;\n    const hamburger: HTMLDivElement = document.querySelector(\n      \".hamburger\"\n    ) as HTMLDivElement;\n    hamburger.addEventListener(\"click\", handleClick);\n    return () => {\n      menu.removeEventListener(\"click\", handleClick);\n    };\n  }, []);\n  const handleButtonClick = () => {\n    const menu: HTMLDivElement = document.querySelector(\n      \".menu\"\n    ) as HTMLDivElement;\n    if (menu.classList.contains(\"hide\")) {\n      menu.classList.remove(\"hide\");\n      menu.style.display = \"block\";\n    } else {\n      menu.classList.add(\"hide\");\n      menu.style.display = \"none\";\n    }\n  };\n  return (\n    <>\n      <Wrapper>\n        <div className=\"hamburger\">\n          <i className=\"fab fa-accessible-icon\" />\n        </div>\n        <Link to=\"/\">\n          <div>DKSL</div>\n        </Link>\n        <div>\n          <i className=\"fas fa-user\"></i>\n        </div>\n      </Wrapper>\n      <Menu className=\"menu hide\" onClick={handleButtonClick}>\n        <List>\n          <Link to=\"/\">Home</Link>\n        </List>\n        <List>\n          <Link to=\"/league\">리그</Link>\n        </List>\n        <List>\n          <Link to=\"/search\">선수 정보</Link>\n        </List>\n        <List>문자 중계</List>\n      </Menu>\n    </>\n  );\n});\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport Home from \"../routes/Home\";\nimport Main from \"../routes/Main\";\nimport NotFound from \"../routes/NotFound\";\nimport Stat from \"../routes/Stat\";\nimport Search from \"../routes/Search\";\nimport League from \"../routes/League\";\nimport Records from \"../routes/Records\";\nimport Header from \"./Header\";\n\nexport default () => (\n  <>\n    <Router>\n      <Header />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/league\" component={League} />\n        <Route path=\"/live/:id\" component={Main} />\n        <Route path=\"/records\" component={Records} />\n        <Route path=\"/stat/:id\" component={Stat} />\n        <Route exact path=\"/search\" component={Search} />\n        <Route path=\"/404\" component={NotFound} />\n        <Redirect path=\"*\" to=\"/404\" />\n      </Switch>\n    </Router>\n  </>\n);\n","import { createGlobalStyle } from \"styled-components\";\nimport { reset } from \"styled-reset\";\n\nconst GlobalStyle = createGlobalStyle`\n    ${reset};\n    * {\n        box-sizing: border-box;\n        font-family: 'Noto Sans KR', sans-serif !important;\n    }\n    a {\n        text-decoration: none;\n        color: inherit;\n    }\n    button {\n        &:focus {\n          outline: none; \n        }\n    }\n`;\n\nexport default GlobalStyle;\n","import React from \"react\";\nimport Router from \"./Router\";\nimport GlobalStyle from \"./GlobalStyle\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\nconst App: React.FC<{}> = () => {\n  return (\n    <>\n      <GlobalStyle />\n      <Router />\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}