{"version":3,"sources":["routes/Home/HomePresenter.tsx","apis.ts","routes/Home/index.tsx","routes/Home/HomeContainer.tsx","components/Record.tsx","components/Scoreboard.tsx","routes/Main/index.tsx","routes/NotFound/index.tsx","routes/Stat/StatPresenter.tsx","routes/Stat/index.tsx","routes/Stat/StatContainer.tsx","routes/Search/SearchPresenter.tsx","routes/Search/index.tsx","routes/Search/SearchContainer.tsx","components/Header.tsx","components/Router.tsx","components/GlobalStyle.tsx","components/App.tsx","serviceWorker.ts","index.tsx"],"names":["Wrapper","styled","div","LiveGames","Game","Team","VS","Title","Img","img","HomePresenter","live","console","log","settings","infinite","speed","slidesToShow","slidesToScroll","dots","useEffect","arrow","document","querySelectorAll","style","display","src","map","l","idx","key","to","away","name","split","score","nowInning","nowTopBottom","home","api","axios","create","baseURL","socketServer","apis","fetchLeague","get","fetchLeagueTeams","id","fetchTeamPlayers","fetchPlayerStat","fetchTeamInfo","fetchAllPlayers","fetchLiveGames","HomeContainer","useState","setLive","a","data","Away","Home","Name","Table","table","TitleTr","tr","Pinch","span","SLink","Link","Record","batterInfo","info","batters","batter","index","ID","now","stat","AB","H","_2B","_3B","RBI","R","HR","BB","HBP","pitcherInfo","pitcher","IP","ER","SO","NP","ScoreContainer","TeamScore","Score","VSContainer","Ground","Board","Inning","TotalScore","td","Scoreboard","awayHits","setAwayHits","homeHits","setHomeHits","awayErr","setAwayErr","homeErr","setHomeErr","awayBB","setAwayBB","homeBB","setHomeBB","awayBatterInfo","homeBatterInfo","forEach","E","totalScore","ground","s","socket","socketio","connect","inning","BroadcastContainer","ButtonContainer","Button","button","props","disabled","NavigationContainer","Nav","Textcast","Main","match","currentInning","setCurrentInning","isBroadcast","setIsBroadcast","emit","params","on","handleClick","e","target","parseInt","innerText","onClick","inn","dangerouslySetInnerHTML","__html","textCast","NotFound","TeamName","Birth","Info","Container","PlayerInfo","Total","TableWrapper","BtnWrapper","Batter","isOn","Pitcher","StatPresenter","isBatter","setIsBatter","isPitcher","setIsPitcher","batter_stat","i","player_info","p","pitcher_stat","teamName","playerName","backNum","birthday","substring","join","total","AVG","toFixed","G","PA","TB","SB","CS","SAC","SF","IBB","GDP","SLG","OBP","OPS","yearly","y","year","ERA","W","L","HLD","SV","BK","Batters","K","WP","StatContainer","setStat","fetchStat","InputForm","Input","input","Btn","SearchPresenter","player","term","setTerm","filtered","setFiltered","filter","includes","type","onChange","value","onKeyPress","className","playerId","SearchContainer","setPlayer","Menu","List","withRouter","menu","classList","contains","remove","add","querySelector","addEventListener","removeEventListener","Header","exact","path","component","Stat","Search","GlobalStyle","createGlobalStyle","reset","App","Router","Boolean","window","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e7d48504.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { INowLive } from \"../../interfaces/nowLive\";\nimport Slider from \"react-slick\";\nimport { Link } from \"react-router-dom\";\n\ninterface IHome {\n  live: INowLive[];\n}\n\nconst Wrapper = styled.div`\n  width: 100%;\n  margin-top: 20px;\n  padding: 0 20px;\n`;\n\nconst LiveGames = styled.div``;\n\nconst Game = styled.div`\n  display: flex !important;\n  justify-content: space-around;\n  align-items: center;\n  padding: 20px;\n  background-color: #f2f2f2;\n  border-radius: 5px;\n`;\n\nconst Team = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-weight: 600;\n  font-size: 14px;\n  div:nth-child(2) {\n    font-size: 22px;\n    margin-top: 5px;\n  }\n`;\n\nconst VS = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  div:nth-child(1) {\n    font-size: 16px;\n    font-weight: 600;\n    margin-bottom: 3px;\n  }\n  div:nth-child(2) {\n    font-size: 14px;\n    color: #2450aa;\n    font-weight: 700;\n  }\n`;\n\nconst Title = styled.div`\n  font-size: 18px;\n  font-weight: 600;\n  margin-bottom: 10px;\n`;\n\nconst Img = styled.img`\n  width: 100%;\n  margin-bottom: 20px;\n`;\n\nconst HomePresenter: React.FC<IHome> = ({ live }) => {\n  console.log(live);\n  const settings = {\n    infinite: false,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    dots: true,\n  };\n  useEffect(() => {\n    const arrow: any = document.querySelectorAll(\".slick-arrow\");\n    arrow[0].style.display = \"none\";\n    arrow[1].style.display = \"none\";\n  }, []);\n  return (\n    <div>\n      <Wrapper>\n        <Img src=\"https://s7d2.scene7.com/is/image/TWCNews/mlb_baseball_jpeg\" />\n        <Title>진행중인 게임</Title>\n        <LiveGames>\n          <Slider {...settings}>\n            {live.map((l, idx) => (\n              <div key={idx}>\n                <Link to={`live/${idx}`}>\n                  <Game>\n                    <Team>\n                      <div>{l.away.name.split(\" \")[0]}</div>\n                      <div>{l.away.score}</div>\n                    </Team>\n                    <VS>\n                      <div>vs</div>\n                      <div>\n                        {l.nowInning === 0\n                          ? \"경기 전\"\n                          : `${l.nowInning}회 ${l.nowTopBottom ? \"말\" : \"초\"}`}\n                      </div>\n                    </VS>\n                    <Team>\n                      <div>{l.home.name.split(\" \")[0]}</div>\n                      <div>{l.home.score}</div>\n                    </Team>\n                  </Game>\n                </Link>\n              </div>\n            ))}\n          </Slider>\n        </LiveGames>\n      </Wrapper>\n    </div>\n  );\n};\n\nexport default HomePresenter;\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"http://49.50.172.42:3001/\",\n});\n\nconst socketServer = axios.create({\n  baseURL: \"http://49.50.172.42:3002/\",\n});\n\nconst apis = {\n  fetchLeague: () => api.get(`getLeagues`),\n  fetchLeagueTeams: (id: number) => api.get(`getLeagueTeams/${id}`),\n  fetchTeamPlayers: (id: number) => api.get(`getTeamPlayers/${id}`),\n  fetchPlayerStat: (id: number) => api.get(`getPlayerStat/${id}`),\n  fetchTeamInfo: (id: number) => api.get(`getTeamInfo/${id}`),\n  fetchAllPlayers: () => api.get(`getPlayerInfo`),\n  fetchLiveGames: () => socketServer.get(`getLiveGames`),\n};\n\nexport default apis;\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","import React, { useState, useEffect } from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport apis from \"../../apis\";\nimport { INowLive } from \"../../interfaces/nowLive\";\n\nconst HomeContainer: React.FC<{}> = () => {\n  const [live, setLive] = useState<INowLive[] | null>(null);\n  useEffect(() => {\n    const fetchLiveGames = async () => {\n      try {\n        const { data: live } = await apis.fetchLiveGames();\n        setLive(live);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    fetchLiveGames();\n  }, []);\n  return (\n    <div>\n      {live === null ? <div>Loading...</div> : <HomePresenter live={live} />}\n    </div>\n  );\n};\n\nexport default HomeContainer;\n","import React from \"react\";\nimport { ILive } from \"../interfaces/live\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\ninterface IProps {\n  live: ILive;\n}\n\nconst Away = styled.div`\n  padding-bottom: 20px;\n`;\n\nconst Home = styled.div`\n  padding-bottom: 20px;\n`;\n\nconst Name = styled.div`\n  font-size: 20px;\n  font-weight: 700;\n  padding: 20px 0;\n  padding-left: 10px;\n`;\n\nconst Table = styled.table`\n  width: 100%;\n  td {\n    text-align: center;\n    padding: 10px 0;\n    padding-top: 13px;\n    font-size: 13px;\n    border-bottom: 1px solid #f2f2f2;\n  }\n`;\n\nconst TitleTr = styled.tr`\n  background-color: #2450aa;\n  color: #fff;\n  font-weight: 500;\n  font-size: 12px;\n`;\n\nconst Pinch = styled.span`\n  font-size: 10px;\n  opacity: 0.7;\n`;\n\nconst SLink = styled(Link)`\n  width: 100%;\n  text-align: center;\n`;\n\nconst Record: React.FC<IProps> = ({ live }) => {\n  return (\n    <div>\n      <Away>\n        <Name>{live.away.name}</Name>\n        <Table>\n          <tbody>\n            <TitleTr>\n              <td></td>\n              <td>타수</td>\n              <td>안타</td>\n              <td>2루타</td>\n              <td>3루타</td>\n              <td>타점</td>\n              <td>득점</td>\n              <td>홈런</td>\n              <td>볼넷</td>\n            </TitleTr>\n            {live.away.batterInfo.map((info) => {\n              return info.batters.map((batter, index) => (\n                <tr key={index}>\n                  <td>\n                    <SLink to={`/stat/${batter.ID}`}>\n                      {batter.name}{\" \"}\n                      {info.now !== 0 && index !== 0 && <Pinch>대</Pinch>}\n                    </SLink>\n                  </td>\n                  <td>{batter.stat.AB}</td>\n                  <td>{batter.stat.H}</td>\n                  <td>{batter.stat._2B}</td>\n                  <td>{batter.stat._3B}</td>\n                  <td>{batter.stat.RBI}</td>\n                  <td>{batter.stat.R}</td>\n                  <td>{batter.stat.HR}</td>\n                  <td>{batter.stat.BB + batter.stat.HBP}</td>\n                </tr>\n              ));\n            })}\n          </tbody>\n        </Table>\n        <Table>\n          <tbody>\n            <TitleTr>\n              <td></td>\n              <td>이닝</td>\n              <td>자책</td>\n              <td>볼넷</td>\n              <td>삼진</td>\n              <td>피안타</td>\n              <td>투구수</td>\n            </TitleTr>\n            {live.away.pitcherInfo.map((pitcher, index) => (\n              <tr key={index}>\n                <td>{pitcher.name}</td>\n                <td>{pitcher.stat.IP}</td>\n                <td>{pitcher.stat.ER}</td>\n                <td>{pitcher.stat.BB}</td>\n                <td>{pitcher.stat.SO}</td>\n                <td>{pitcher.stat.H}</td>\n                <td>{pitcher.stat.NP}</td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </Away>\n      <Home>\n        <Name>{live.home.name}</Name>\n        <Table>\n          <tbody>\n            <TitleTr>\n              <td></td>\n              <td>타수</td>\n              <td>안타</td>\n              <td>2루타</td>\n              <td>3루타</td>\n              <td>타점</td>\n              <td>득점</td>\n              <td>홈런</td>\n              <td>볼넷</td>\n            </TitleTr>\n            {live.home.batterInfo.map((info) => {\n              return info.batters.map((batter, index) => (\n                <tr key={index}>\n                  <td>\n                    <SLink to={`/stat/${batter.ID}`}>\n                      {batter.name}{\" \"}\n                      {info.now !== 0 && index !== 0 && <Pinch>대</Pinch>}\n                    </SLink>\n                  </td>\n                  <td>{batter.stat.AB}</td>\n                  <td>{batter.stat.H}</td>\n                  <td>{batter.stat._2B}</td>\n                  <td>{batter.stat._3B}</td>\n                  <td>{batter.stat.RBI}</td>\n                  <td>{batter.stat.R}</td>\n                  <td>{batter.stat.HR}</td>\n                  <td>{batter.stat.BB + batter.stat.HBP}</td>\n                </tr>\n              ));\n            })}\n          </tbody>\n        </Table>\n        <Table>\n          <tbody>\n            <TitleTr>\n              <td></td>\n              <td>이닝</td>\n              <td>자책</td>\n              <td>볼넷</td>\n              <td>삼진</td>\n              <td>피안타</td>\n              <td>투구수</td>\n            </TitleTr>\n            {live.home.pitcherInfo.map((pitcher, index) => (\n              <tr key={index}>\n                <td>{pitcher.name}</td>\n                <td>{pitcher.stat.IP}</td>\n                <td>{pitcher.stat.ER}</td>\n                <td>{pitcher.stat.BB}</td>\n                <td>{pitcher.stat.SO}</td>\n                <td>{pitcher.stat.H}</td>\n                <td>{pitcher.stat.NP}</td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </Home>\n    </div>\n  );\n};\n\nexport default Record;\n","import React, { useState, useEffect } from \"react\";\nimport { ILive } from \"../interfaces/live\";\nimport styled from \"styled-components\";\n\ninterface IProps {\n  live: ILive;\n}\n\nconst ScoreContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 25px 5px;\n  background-color: #2450aa;\n  color: #fff;\n`;\n\nconst TeamScore = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Team = styled.div`\n  font-size: 15px;\n  font-weight: 600;\n  margin-bottom: 15px;\n  opacity: 0.8;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  div:nth-child(1) {\n    margin-bottom: 5px;\n  }\n`;\n\nconst Score = styled.div`\n  font-size: 44px;\n  font-weight: 700;\n`;\n\nconst VSContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  font-size: 16px;\n  font-weight: 700;\n  position: relative;\n`;\n\nconst Ground = styled.div`\n  width: 100%;\n  position: absolute;\n  top: 25px;\n  font-size: 12px;\n  font-weight: 500;\n  opacity: 0.8;\n  text-align: center;\n`;\n\nconst Board = styled.div`\n  width: 100%;\n  background-color: #1d4aa1;\n  color: #fff;\n  padding: 10px 5px;\n  display: flex;\n  justify-content: center;\n  font-size: 14px;\n`;\n\nconst Table = styled.table`\n  width: 100%;\n  text-align: center;\n  td {\n    padding: 5px 4px;\n  }\n`;\n\nconst Inning = styled.tr`\n  opacity: 0.7;\n  td {\n    padding-bottom: 10px;\n  }\n`;\n\nconst TotalScore = styled.td`\n  color: #7efff5;\n`;\n\nconst Scoreboard: React.FC<IProps> = ({ live }) => {\n  const [awayHits, setAwayHits] = useState<number>(0);\n  const [homeHits, setHomeHits] = useState<number>(0);\n  const [awayErr, setAwayErr] = useState<number>(0);\n  const [homeErr, setHomeErr] = useState<number>(0);\n  const [awayBB, setAwayBB] = useState<number>(0);\n  const [homeBB, setHomeBB] = useState<number>(0);\n  useEffect(() => {\n    const awayBatterInfo = live.away.batterInfo;\n    const homeBatterInfo = live.home.batterInfo;\n    let awayHits = 0,\n      homeHits = 0,\n      awayErr = 0,\n      homeErr = 0,\n      awayBB = 0,\n      homeBB = 0;\n    awayBatterInfo.forEach((away) => {\n      away.batters.forEach((batter) => {\n        awayHits += batter.stat.H;\n        awayErr += batter.stat.E;\n        awayBB += batter.stat.BB;\n        awayBB += batter.stat.HBP;\n      });\n    });\n    homeBatterInfo.forEach((home) => {\n      home.batters.forEach((batter) => {\n        homeHits += batter.stat.H;\n        homeErr += batter.stat.E;\n        homeBB += batter.stat.BB;\n        homeBB += batter.stat.HBP;\n      });\n    });\n    setAwayHits(awayHits);\n    setHomeHits(homeHits);\n    setAwayErr(awayErr);\n    setHomeErr(homeErr);\n    setAwayBB(awayBB);\n    setHomeBB(homeBB);\n  }, [live]);\n  return (\n    <div>\n      <ScoreContainer>\n        <TeamScore>\n          <Team>\n            <div>{live.away.name.split(\" \")[0]}</div>\n            <div>{live.away.name.split(\" \")[1]}</div>\n          </Team>\n          <Score>{live.away.totalScore}</Score>\n        </TeamScore>\n        <VSContainer>\n          <div>VS</div>\n          <Ground>{live.ground}</Ground>\n        </VSContainer>\n        <TeamScore>\n          <Team>\n            <div>{live.home.name.split(\" \")[0]}</div>\n            <div>{live.home.name.split(\" \")[1]}</div>\n          </Team>\n          <Score>{live.home.totalScore}</Score>\n        </TeamScore>\n      </ScoreContainer>\n      <Board>\n        <Table>\n          <tbody>\n            <Inning>\n              <td></td>\n              <td>1</td>\n              <td>2</td>\n              <td>3</td>\n              <td>4</td>\n              <td>5</td>\n              <td>6</td>\n              <td>7</td>\n              <td>8</td>\n              <td>9</td>\n              <TotalScore>R</TotalScore>\n              <td>H</td>\n              <td>E</td>\n              <td>B</td>\n            </Inning>\n            <tr>\n              <td>{live.away.name.split(\" \")[0]}</td>\n              {live.away.score.map((s, index) => (\n                <td key={index}>{live.nowInning - 1 >= index ? s : \"\"}</td>\n              ))}\n              <TotalScore>{live.away.totalScore}</TotalScore>\n              <td>{awayHits}</td>\n              <td>{homeErr}</td>\n              <td>{awayBB}</td>\n            </tr>\n            <tr>\n              <td>{live.home.name.split(\" \")[0]}</td>\n              {live.home.score.map((s, index) => (\n                <td key={index}>\n                  {live.nowInning - 1 > index\n                    ? s\n                    : live.nowInning - 1 === index && live.nowTopBottom\n                    ? s\n                    : \"\"}\n                </td>\n              ))}\n              <TotalScore>{live.home.totalScore}</TotalScore>\n              <td>{homeHits}</td>\n              <td>{awayErr}</td>\n              <td>{homeBB}</td>\n            </tr>\n          </tbody>\n        </Table>\n      </Board>\n    </div>\n  );\n};\n\nexport default Scoreboard;\n","import React, { useState, useEffect } from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport socketio from \"socket.io-client\";\nimport styled from \"styled-components\";\nimport { ILive } from \"../..//interfaces/live\";\nimport Record from \"../../components/Record\";\nimport Scoreboard from \"../../components/Scoreboard\";\nimport \"./Main.css\";\n\nconst socket: any = socketio.connect(\"http://49.50.172.42:3002/\");\nconst inning: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\ninterface MatchParams {\n  id: string;\n}\n\nconst BroadcastContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ButtonContainer = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  background-color: #5d93d2;\n  overflow: scroll;\n`;\n\nconst Button: any = styled.button`\n  width: 100%;\n  padding: 10px 0;\n  background-color: ${(props) => (props.disabled ? \"#5d93d2\" : \"#1D4AA0\")};\n  color: #fff;\n  font-weight: 600;\n  opacity: ${(props) => (props.disabled ? \"0.7\" : \"1\")};\n  border: none;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: ${(props) => (props.disabled ? \"default\" : \"pointer\")}; ;\n`;\n\nconst NavigationContainer = styled.div`\n  width: 100%;\n  display: flex;\n`;\n\nconst Nav: any = styled.button`\n  width: 100%;\n  background-color: #2450aa;\n  border: none;\n  padding: 10px;\n  color: #fff;\n  font-weight: 500;\n  cursor: pointer;\n`;\n\nconst Textcast = styled.div`\n  padding: 10px;\n`;\n\nconst Main: React.FC<RouteComponentProps<MatchParams>> = ({ match }) => {\n  const [live, setLive] = useState<ILive | null>(null);\n  const [currentInning, setCurrentInning] = useState<number>(-1);\n  const [isBroadcast, setIsBroadcast] = useState<boolean>(true);\n  useEffect(() => {\n    socket.emit(\"joinLive\", match.params.id);\n    socket.emit(\"getLiveCast\", match.params.id);\n    // 전송 누를 때마다\n    socket.on(\"sendLiveCast\", (live: ILive) => {\n      console.log(live);\n      setLive(live);\n      setCurrentInning(live.nowInning);\n    });\n    socket.on(\"liveCast\", (live: ILive) => {\n      console.log(live);\n      setLive(live);\n      setCurrentInning(live.nowInning);\n    });\n  }, []);\n  const handleClick = (e: any) => {\n    const target = e.target as HTMLButtonElement;\n    setCurrentInning(parseInt(target.innerText));\n  };\n  useEffect(() => {\n    console.log(currentInning);\n  }, [currentInning]);\n  return (\n    <div>\n      {live === null ? (\n        <div>No Game</div>\n      ) : (\n        <>\n          <Scoreboard live={{ ...live }} />\n          <NavigationContainer>\n            <Nav onClick={() => setIsBroadcast(true)}>중계</Nav>\n            <Nav onClick={() => setIsBroadcast(false)}>기록</Nav>\n          </NavigationContainer>\n          {isBroadcast ? (\n            <BroadcastContainer>\n              <ButtonContainer>\n                {inning.map((inn) => (\n                  <Button\n                    inning={inn}\n                    key={inn}\n                    onClick={handleClick}\n                    disabled={live.nowInning < inn}\n                  >\n                    {`${inn}회`}\n                  </Button>\n                ))}\n              </ButtonContainer>\n              <Textcast\n                dangerouslySetInnerHTML={{\n                  __html:\n                    currentInning === -1\n                      ? live.textCast[0]\n                      : live.textCast[currentInning - 1],\n                }}\n              />\n            </BroadcastContainer>\n          ) : (\n            <Record live={live} />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Main;\n","import React from \"react\";\n\nconst NotFound: React.FC<{}> = () => {\n  return <div>404 Not Found</div>;\n};\n\nexport default NotFound;\n","import React, { useState } from \"react\";\nimport { IStat } from \"../../interfaces/stat\";\nimport styled from \"styled-components\";\n\ninterface IStatProps {\n  stat: IStat;\n}\n\nconst TeamName = styled.div`\n  font-size: 18px;\n  font-weight: 600;\n  margin-bottom: 10px;\n`;\n\nconst Name = styled.div`\n  font-size: 16px;\n  font-weight: 500;\n  margin-bottom: 10px;\n`;\n\nconst Birth = styled.div``;\n\nconst Img = styled.div`\n  width: 100%;\n  height: 200px;\n  border: 1px solid gray;\n  margin-right: 30px;\n`;\n\nconst Info = styled.div`\n  width: 100%;\n  text-align: left;\n`;\n\nconst Container = styled.div`\n  width: 100%;\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst PlayerInfo = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nconst Total = styled.div`\n  font-size: 20px;\n  font-weight: 600;\n  margin-bottom: 20px;\n`;\n\nconst Record = styled.div`\n  width: 100%;\n  font-size: 16px;\n`;\n\nconst TableWrapper = styled.div`\n  width: 100%;\n  overflow: scroll;\n`;\n\nconst Table = styled.table`\n  width: 100%;\n  td {\n    text-align: center;\n    padding: 10px 15px;\n    padding-top: 12px;\n    white-space: nowrap;\n    font-weight: 500;\n  }\n  tr:nth-child(1) {\n    background-color: #2450aa;\n    color: #fff;\n    font-weight: 600;\n  }\n`;\n\nconst BtnWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  margin-bottom: 10px;\n  font-weight: 600;\n`;\n\nconst Batter: any = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  border-right: 1px solid #c2c2c2;\n  color: ${(props: any) => (props.isOn ? \"#2450aa\" : \"#000\")};\n`;\n\nconst Pitcher: any = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  color: ${(props: any) => (props.isOn ? \"#2450aa\" : \"#000\")};\n`;\n\nconst StatPresenter: React.FC<IStatProps> = ({ stat }) => {\n  const [isBatter, setIsBatter] = useState<boolean>(true);\n  const [isPitcher, setIsPitcher] = useState<boolean>(false);\n  const { batter_stat: s, player_info: i, pitcher_stat: p } = stat;\n  const handleBatter = () => {\n    setIsBatter(true);\n    setIsPitcher(false);\n  };\n  const handlePitcher = () => {\n    setIsBatter(false);\n    setIsPitcher(true);\n  };\n  return (\n    <>\n      <Container>\n        <PlayerInfo>\n          <Img>stat.img</Img>\n          <Info>\n            <TeamName>{i.teamName}</TeamName>\n            <Name>\n              {i.playerName} No. {i.backNum}\n            </Name>\n            <Birth>{i.birthday.substring(0, 10).split(\"-\").join(\"/\")}</Birth>\n          </Info>\n        </PlayerInfo>\n        <Record>\n          <Total>선수 기록 - {isBatter ? \"타자\" : \"투수\"}</Total>\n          <BtnWrapper>\n            <Batter onClick={handleBatter} isOn={isBatter}>\n              타자\n            </Batter>\n            <Pitcher onClick={handlePitcher} isOn={isPitcher}>\n              투수\n            </Pitcher>\n          </BtnWrapper>\n          {isBatter ? (\n            <TableWrapper>\n              <Table>\n                <tbody>\n                  <tr>\n                    <td>시즌</td>\n                    <td>AVG</td>\n                    <td>G</td>\n                    <td>PA</td>\n                    <td>AB</td>\n                    <td>R</td>\n                    <td>H</td>\n                    <td>2B</td>\n                    <td>3B</td>\n                    <td>HR</td>\n                    <td>TB</td>\n                    <td>RBI</td>\n                    <td>SB</td>\n                    <td>CS</td>\n                    <td>SAC</td>\n                    <td>SF</td>\n                    <td>BB</td>\n                    <td>IBB</td>\n                    <td>HBP</td>\n                    <td>SO</td>\n                    <td>GDP</td>\n                    <td>SLG</td>\n                    <td>OBP</td>\n                    <td>OPS</td>\n                  </tr>\n                  <tr>\n                    <td>통산</td>\n                    <td>{s.total.AVG && s.total.AVG.toFixed(3)}</td>\n                    <td>{s.total.G}</td>\n                    <td>{s.total.PA}</td>\n                    <td>{s.total.AB}</td>\n                    <td>{s.total.R}</td>\n                    <td>{s.total.H}</td>\n                    <td>{s.total._2B}</td>\n                    <td>{s.total._3B}</td>\n                    <td>{s.total.HR}</td>\n                    <td>{s.total.TB}</td>\n                    <td>{s.total.RBI}</td>\n                    <td>{s.total.SB}</td>\n                    <td>{s.total.CS}</td>\n                    <td>{s.total.SAC}</td>\n                    <td>{s.total.SF}</td>\n                    <td>{s.total.BB}</td>\n                    <td>{s.total.IBB}</td>\n                    <td>{s.total.HBP}</td>\n                    <td>{s.total.SO}</td>\n                    <td>{s.total.GDP}</td>\n                    <td>{s.total.SLG && s.total.SLG.toFixed(3)}</td>\n                    <td>{s.total.OBP && s.total.OBP.toFixed(3)}</td>\n                    <td>{s.total.OPS && s.total.OPS.toFixed(3)}</td>\n                  </tr>\n                  {s.yearly.map((y) => (\n                    <tr key={y.year}>\n                      <td>{y.year}</td>\n                      <td>{y.AVG && y.AVG.toFixed(3)}</td>\n                      <td>{y.G}</td>\n                      <td>{y.PA}</td>\n                      <td>{y.AB}</td>\n                      <td>{y.R}</td>\n                      <td>{y.H}</td>\n                      <td>{y._2B}</td>\n                      <td>{y._3B}</td>\n                      <td>{y.HR}</td>\n                      <td>{y.TB}</td>\n                      <td>{y.RBI}</td>\n                      <td>{y.SB}</td>\n                      <td>{y.CS}</td>\n                      <td>{y.SAC}</td>\n                      <td>{y.SF}</td>\n                      <td>{y.BB}</td>\n                      <td>{y.IBB}</td>\n                      <td>{y.HBP}</td>\n                      <td>{y.SO}</td>\n                      <td>{y.GDP}</td>\n                      <td>{y.SLG && y.SLG.toFixed(3)}</td>\n                      <td>{y.OBP && y.OBP.toFixed(3)}</td>\n                      <td>{y.OPS && y.OPS.toFixed(3)}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </Table>\n            </TableWrapper>\n          ) : (\n            <TableWrapper>\n              <Table>\n                <tbody>\n                  <tr>\n                    <td>시즌</td>\n                    <td>ERA</td>\n                    <td>G</td>\n                    <td>W</td>\n                    <td>L</td>\n                    <td>HLD</td>\n                    <td>SV</td>\n                    <td>IP</td>\n                    <td>H</td>\n                    <td>AB</td>\n                    <td>BB</td>\n                    <td>BK</td>\n                    <td>Batters</td>\n                    <td>ER</td>\n                    <td>HBP</td>\n                    <td>HR</td>\n                    <td>K</td>\n                    <td>NP</td>\n                    <td>R</td>\n                    <td>SAC</td>\n                    <td>SF</td>\n                    <td>WP</td>\n                  </tr>\n                  <tr>\n                    <td>통산</td>\n                    <td>{p.total.ERA && p.total.ERA.toFixed(2)}</td>\n                    <td>{p.total.G}</td>\n                    <td>{p.total.W}</td>\n                    <td>{p.total.L}</td>\n                    <td>{p.total.HLD}</td>\n                    <td>{p.total.SV}</td>\n                    <td>{p.total.IP}</td>\n                    <td>{p.total.H}</td>\n                    <td>{p.total.AB}</td>\n                    <td>{p.total.BB}</td>\n                    <td>{p.total.BK}</td>\n                    <td>{p.total.Batters}</td>\n                    <td>{p.total.ER}</td>\n                    <td>{p.total.HBP}</td>\n                    <td>{p.total.HR}</td>\n                    <td>{p.total.K}</td>\n                    <td>{p.total.NP}</td>\n                    <td>{p.total.R}</td>\n                    <td>{p.total.SAC}</td>\n                    <td>{p.total.SF}</td>\n                    <td>{p.total.WP}</td>\n                  </tr>\n                  {p.yearly.map((y) => (\n                    <tr key={y.year}>\n                      <td>{y.year}</td>\n                      <td>{y.ERA && y.ERA.toFixed(2)}</td>\n                      <td>{y.G}</td>\n                      <td>{y.W}</td>\n                      <td>{y.L}</td>\n                      <td>{y.HLD}</td>\n                      <td>{y.SV}</td>\n                      <td>{y.IP}</td>\n                      <td>{y.H}</td>\n                      <td>{y.AB}</td>\n                      <td>{y.BB}</td>\n                      <td>{y.BK}</td>\n                      <td>{y.Batters}</td>\n                      <td>{y.ER}</td>\n                      <td>{y.HBP}</td>\n                      <td>{y.HR}</td>\n                      <td>{y.K}</td>\n                      <td>{y.NP}</td>\n                      <td>{y.R}</td>\n                      <td>{y.SAC}</td>\n                      <td>{y.SF}</td>\n\n                      <td>{y.WP}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </Table>\n            </TableWrapper>\n          )}\n        </Record>\n      </Container>\n    </>\n  );\n};\n\nexport default StatPresenter;\n","import StatContainer from \"./StatContainer\";\n\nexport default StatContainer;\n","import React, { useState, useEffect } from \"react\";\nimport StatPresenter from \"./StatPresenter\";\nimport { IStat } from \"../../interfaces/stat\";\nimport apis from \"../../apis\";\nimport { RouteComponentProps } from \"react-router-dom\";\n\ninterface MatchProps {\n  id: string;\n}\n\nconst StatContainer: React.FC<RouteComponentProps<MatchProps>> = ({\n  match,\n}) => {\n  const [stat, setStat] = useState<IStat | null>(null);\n  useEffect(() => {\n    const fetchStat = async (id: number) => {\n      try {\n        const { data: stat } = await apis.fetchPlayerStat(id);\n        setStat(stat);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    const id = parseInt(match.params.id);\n    fetchStat(id);\n  }, []);\n  return (\n    <div>\n      {stat === null ? <div>Loading...</div> : <StatPresenter stat={stat} />}\n    </div>\n  );\n};\n\nexport default StatContainer;\n","import React, { useState, useEffect } from \"react\";\nimport { IPlayerInfo } from \"../../interfaces/stat\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\ninterface ISearch {\n  player: IPlayerInfo[];\n}\n\nconst Wrapper = styled.div`\n  padding: 20px;\n`;\n\nconst Title = styled.div`\n  font-size: 20px;\n  font-weight: 600;\n  margin-top: 10px;\n  margin-bottom: 20px;\n`;\n\nconst InputForm = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  outline: none;\n  border: none;\n  border: 2px solid #c2c2c2;\n  font-size: 18px;\n  padding: 5px 10px;\n  margin-right: 15px;\n`;\n\nconst Btn = styled.div`\n  opacity: 0.7;\n  font-size: 18px;\n`;\n\nconst TableWrapper = styled.div`\n  width: 100%;\n  overflow: scroll;\n`;\n\nconst Table = styled.table`\n  width: 100%;\n  tr:nth-child(1) {\n    background-color: #2450aa;\n    color: #fff;\n    font-weight: 600;\n    white-space: nowrap;\n  }\n  td {\n    text-align: center;\n    padding: 10px;\n    padding-top: 12px;\n    border-bottom: 1px solid #f2f2f2;\n  }\n`;\n\nconst SLink = styled(Link)`\n  width: 100%;\n`;\n\nconst SearchPresenter: React.FC<ISearch> = ({ player }) => {\n  const [term, setTerm] = useState<string>(\"\");\n  const [filtered, setFiltered] = useState<IPlayerInfo[] | null>(null);\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setTerm(e.target.value);\n  };\n  const handleClick = () => {\n    if (term === \"\") {\n      setFiltered(null);\n      return -1;\n    }\n    const filtered = player.filter(\n      (p) => p.playerName.includes(term) || p.teamName.includes(term)\n    );\n    setFiltered(filtered);\n  };\n  const handleKeyPress = (e: any) => {\n    if (e.key === \"Enter\") handleClick();\n  };\n  return (\n    <Wrapper>\n      <Title>선수 정보</Title>\n      <InputForm>\n        <Input\n          type=\"text\"\n          onChange={handleChange}\n          onKeyPress={handleKeyPress}\n        />\n        <Btn onClick={handleClick}>\n          <i className=\"fas fa-search\"></i>\n        </Btn>\n      </InputForm>\n      <div>\n        {filtered === null ? (\n          <div>\n            <div>검색어를 입력하세용</div>\n            <div>\n              윤주엽(프로젝트 매니저) / 신상우(백엔드) / 이찬형(프론트엔드)이\n              밤새서 만듦 ㅎㅎ\n            </div>\n          </div>\n        ) : (\n          <TableWrapper>\n            <Table>\n              <tbody>\n                <tr>\n                  <td>선수명</td>\n                  <td>소속</td>\n                  <td>등번호</td>\n                </tr>\n                {filtered.map((p) => (\n                  <tr key={p.playerId}>\n                    <td>\n                      <SLink to={`/stat/${p.playerId}`}>{p.playerName}</SLink>\n                    </td>\n                    <td>\n                      <SLink to={`/stat/${p.playerId}`}>{p.teamName}</SLink>\n                    </td>\n                    <td>\n                      <SLink to={`/stat/${p.playerId}`}>{p.backNum}</SLink>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          </TableWrapper>\n        )}\n      </div>\n    </Wrapper>\n  );\n};\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import React, { useState, useEffect } from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport apis from \"../../apis\";\nimport { IPlayerInfo } from \"../../interfaces/stat\";\n\nconst SearchContainer: React.FC<{}> = () => {\n  const [player, setPlayer] = useState<IPlayerInfo[] | null>(null);\n  useEffect(() => {\n    const fetchAllPlayers = async () => {\n      try {\n        const { data: player } = await apis.fetchAllPlayers();\n        setPlayer(player);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    fetchAllPlayers();\n  }, []);\n  return (\n    <div>\n      {player === null ? (\n        <div>Loading...</div>\n      ) : (\n        <SearchPresenter player={player} />\n      )}\n    </div>\n  );\n};\n\nexport default SearchContainer;\n","import React, { useEffect } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 20px;\n  background-color: #2450aa;\n  color: #fff;\n  font-size: 18px;\n  font-weight: 700;\n`;\n\nconst Menu = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  background-color: #2450aa;\n  font-weight: 500;\n  display: none;\n  padding: 10px 20px;\n  color: #fff;\n`;\n\nconst List = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 10px 0;\n  padding-top: 12px;\n  border-bottom: 1px solid #d2d2d2;\n  &:last-child {\n    border: none;\n  }\n`;\n\nexport default withRouter((props) => {\n  useEffect(() => {\n    const handleClick = () => {\n      if (menu.classList.contains(\"hide\")) {\n        menu.classList.remove(\"hide\");\n        menu.style.display = \"block\";\n      } else {\n        menu.classList.add(\"hide\");\n        menu.style.display = \"none\";\n      }\n    };\n    const menu: HTMLDivElement = document.querySelector(\n      \".menu\"\n    ) as HTMLDivElement;\n    const hamburger: HTMLDivElement = document.querySelector(\n      \".hamburger\"\n    ) as HTMLDivElement;\n    hamburger.addEventListener(\"click\", handleClick);\n    return () => {\n      menu.removeEventListener(\"click\", handleClick);\n    };\n  }, []);\n  const handleButtonClick = () => {\n    const menu: HTMLDivElement = document.querySelector(\n      \".menu\"\n    ) as HTMLDivElement;\n    if (menu.classList.contains(\"hide\")) {\n      menu.classList.remove(\"hide\");\n      menu.style.display = \"block\";\n    } else {\n      menu.classList.add(\"hide\");\n      menu.style.display = \"none\";\n    }\n  };\n  return (\n    <>\n      <Wrapper>\n        <div className=\"hamburger\">\n          <i className=\"fab fa-accessible-icon\" />\n        </div>\n        <Link to=\"/\">\n          <div>DKSL</div>\n        </Link>\n        <div>\n          <i className=\"fas fa-user\"></i>\n        </div>\n      </Wrapper>\n      <Menu className=\"menu hide\" onClick={handleButtonClick}>\n        <List>\n          <Link to=\"/\">Home</Link>\n        </List>\n        <List>리그</List>\n        <List>\n          <Link to=\"/search\">선수 정보</Link>\n        </List>\n        <List>문자 중계</List>\n      </Menu>\n    </>\n  );\n});\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport Home from \"../routes/Home\";\nimport Main from \"../routes/Main\";\nimport NotFound from \"../routes/NotFound\";\nimport Stat from \"../routes/Stat\";\nimport Search from \"../routes/Search\";\nimport Header from \"./Header\";\n\nexport default () => (\n  <>\n    <Router>\n      <Header />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/live/:id\" component={Main} />\n        <Route path=\"/stat/:id\" component={Stat} />\n        <Route exact path=\"/search\" component={Search} />\n        <Route path=\"/404\" component={NotFound} />\n        <Redirect path=\"*\" to=\"/404\" />\n      </Switch>\n    </Router>\n  </>\n);\n","import { createGlobalStyle } from \"styled-components\";\nimport { reset } from \"styled-reset\";\n\nconst GlobalStyle = createGlobalStyle`\n    ${reset};\n    * {\n        box-sizing: border-box;\n        font-family: 'Noto Sans KR', sans-serif !important;\n    }\n    a {\n        text-decoration: none;\n        color: inherit;\n    }\n    button {\n        &:focus {\n          outline: none; \n        }\n    }\n`;\n\nexport default GlobalStyle;\n","import React from \"react\";\nimport Router from \"./Router\";\nimport GlobalStyle from \"./GlobalStyle\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\nconst App: React.FC<{}> = () => {\n  return (\n    <>\n      <GlobalStyle />\n      <Router />\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}