{"version":3,"sources":["routes/Home/HomePresenter.tsx","apis.ts","routes/Home/index.tsx","routes/Home/HomeContainer.tsx","components/Record.tsx","components/Scoreboard.tsx","routes/Main/index.tsx","routes/NotFound/index.tsx","routes/Stat/StatPresenter.tsx","routes/Stat/index.tsx","routes/Stat/StatContainer.tsx","routes/Search/SearchPresenter.tsx","routes/Search/index.tsx","routes/Search/SearchContainer.tsx","routes/League/LeaguePresenter.tsx","routes/League/LeagueContainer.tsx","routes/League/index.tsx","components/BatterTable.tsx","components/PitcherTable.tsx","routes/Records/RecordsPresenter.tsx","routes/Records/index.tsx","routes/Records/RecordsContainer.tsx","routes/Teams/TeamsPresenter.tsx","routes/Teams/index.tsx","routes/Teams/TeamsContainer.tsx","components/Header.tsx","components/Router.tsx","components/GlobalStyle.tsx","components/App.tsx","serviceWorker.ts","index.tsx"],"names":["Wrapper","styled","div","LiveGames","Game","Team","VS","Title","Img","img","HomePresenter","live","console","log","settings","infinite","speed","slidesToShow","slidesToScroll","dots","useEffect","length","arrow","document","querySelectorAll","style","display","src","map","l","idx","key","to","away","name","split","score","nowInning","nowTopBottom","home","api","axios","create","baseURL","socketServer","apis","fetchLeague","get","fetchLeagueTeams","id","fetchTeamPlayers","fetchPlayerStat","fetchTeamInfo","fetchAllPlayers","fetchLiveGames","fetchTeamsByLeagueId","fetchAllPlayersBatterStat","fetchAllPlayersPithcherStat","fetchTeamPlayerBatterStat","fetchTeamPlayerPitcherStat","HomeContainer","useState","setLive","a","data","Away","Home","Name","Table","table","TitleTr","tr","Pinch","span","SLink","Link","Record","batterInfo","info","batters","batter","index","ID","now","stat","AB","H","_2B","_3B","RBI","R","HR","BB","HBP","pitcherInfo","pitcher","IP","ER","SO","NP","ScoreContainer","TeamScore","Score","VSContainer","Ground","Board","Inning","TotalScore","td","Scoreboard","awayHits","setAwayHits","homeHits","setHomeHits","awayErr","setAwayErr","homeErr","setHomeErr","awayBB","setAwayBB","homeBB","setHomeBB","awayBatterInfo","homeBatterInfo","forEach","E","totalScore","ground","s","socket","socketio","connect","inning","BroadcastContainer","ButtonContainer","Button","button","props","disabled","NavigationContainer","Nav","Textcast","Main","match","currentInning","setCurrentInning","isBroadcast","setIsBroadcast","emit","params","on","handleClick","e","target","parseInt","innerText","onClick","inn","dangerouslySetInnerHTML","__html","textCast","NotFound","TeamName","Birth","GroundWrapper","Info","Container","PlayerInfo","Total","TableWrapper","BtnWrapper","Batter","isOn","Pitcher","P","C","F","S","T","SS","LF","CF","RF","LC","RC","GO","FO","LO","BatterName","StatPresenter","isBatter","setIsBatter","isPitcher","setIsPitcher","batter_stat","i","player_info","p","pitcher_stat","calcAvg","rec","total","FRISTBASE","SECONDBASE","THIRDBASE","toFixed","teamName","playerName","backNum","birthday","substring","join","AVG","G","PA","TB","SB","CS","SAC","SF","IBB","GDP","SLG","OBP","OPS","yearly","y","year","ERA","W","L","HLD","SV","BK","Batters","K","WP","StatContainer","setStat","fetchStat","InputForm","Input","input","Btn","Pagination","select","SearchPresenter","player","term","setTerm","filtered","setFiltered","page","setPage","pageData","setPageData","totalPage","setTotalPage","Math","ceil","start","end","slice","handlePageClick","filter","includes","type","onChange","value","onKeyPress","className","playerId","Array","t","SearchContainer","setPlayer","List","LeaguePresenter","teams","team","teamId","Select","LeagueContainer","league","setLeague","leagueId","setLeagueId","setTeams","sort","b","fetchTeamsbyLeagueId","defaultValue","leagueName","Rank","BatterTable","PitcherTable","pitchers","Notice","RecordsPresenter","allYears","handleYearChange","handleBatterKey","handlePitcherKey","handleIsBatter","RecordsContainer","setBatters","setPitchers","years","setYears","batterPlayersWithYear","setBatterPlayerWithYear","pitcherPlayersWithYear","setPitcherPlayerWithYear","currentYear","setCurrentYear","sortBKey","setBSortKey","sortPKey","setPSortKey","sortBatter","setSortBatter","sortPitcher","setSortPitcher","_years","Set","add","from","fetchAllPlayersStat","batterArr","pitcherArr","newBatters","newPithers","Found","TeamsPresenter","teamInfo","foundingYear","TeamsContainer","setTeamInfo","Menu","withRouter","menu","classList","contains","remove","querySelector","addEventListener","removeEventListener","Header","exact","path","component","League","Records","Stat","Teams","Search","GlobalStyle","createGlobalStyle","reset","App","Router","Boolean","window","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3ac100b5.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { INowLive } from \"../../interfaces/nowLive\";\nimport Slider from \"react-slick\";\nimport { Link } from \"react-router-dom\";\n\ninterface IHome {\n  live: INowLive[];\n}\n\nconst Wrapper = styled.div`\n  width: 100%;\n  margin-top: 20px;\n  padding: 0 20px;\n`;\n\nconst LiveGames = styled.div``;\n\nconst Game = styled.div`\n  display: flex !important;\n  justify-content: space-around;\n  align-items: center;\n  padding: 20px;\n  background-color: #f2f2f2;\n  border-radius: 5px;\n`;\n\nconst Team = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-weight: 600;\n  font-size: 14px;\n  div:nth-child(2) {\n    font-size: 22px;\n    margin-top: 5px;\n  }\n`;\n\nconst VS = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  div:nth-child(1) {\n    font-size: 16px;\n    font-weight: 600;\n    margin-bottom: 3px;\n  }\n  div:nth-child(2) {\n    font-size: 14px;\n    color: #2450aa;\n    font-weight: 700;\n  }\n`;\n\nconst Title = styled.div`\n  font-size: 18px;\n  font-weight: 600;\n  margin-bottom: 10px;\n`;\n\nconst Img = styled.img`\n  width: 100%;\n  margin-bottom: 20px;\n`;\n\nconst HomePresenter: React.FC<IHome> = ({ live }) => {\n  console.log(live);\n  const settings = {\n    infinite: false,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    dots: true,\n  };\n  useEffect(() => {\n    if (live.length > 0) {\n      const arrow: any = document.querySelectorAll(\".slick-arrow\");\n      arrow[0].style.display = \"none\";\n      arrow[1].style.display = \"none\";\n    }\n  }, []);\n  return (\n    <div>\n      <Wrapper>\n        <Img src=\"https://s7d2.scene7.com/is/image/TWCNews/mlb_baseball_jpeg\" />\n        <Title>LIVE</Title>\n        {live.length === 0 ? (\n          <div>진행중인 게임이 없습니다!</div>\n        ) : (\n          <LiveGames>\n            <Slider {...settings}>\n              {live.map((l, idx) => (\n                <div key={idx}>\n                  <Link to={`live/${idx}`}>\n                    <Game>\n                      <Team>\n                        <div>{l.away.name.split(\" \")[0]}</div>\n                        <div>{l.away.score}</div>\n                      </Team>\n                      <VS>\n                        <div>vs</div>\n                        <div>\n                          {l.nowInning === 0\n                            ? \"경기 전\"\n                            : `${l.nowInning}회 ${\n                                l.nowTopBottom ? \"말\" : \"초\"\n                              }`}\n                        </div>\n                      </VS>\n                      <Team>\n                        <div>{l.home.name.split(\" \")[0]}</div>\n                        <div>{l.home.score}</div>\n                      </Team>\n                    </Game>\n                  </Link>\n                </div>\n              ))}\n            </Slider>\n          </LiveGames>\n        )}\n      </Wrapper>\n    </div>\n  );\n};\n\nexport default HomePresenter;\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"http://49.50.172.42:3001/\",\n});\n\nconst socketServer = axios.create({\n  baseURL: \"http://49.50.172.42:3002/\",\n});\n\nconst apis = {\n  fetchLeague: () => api.get(`getLeagues`),\n  fetchLeagueTeams: (id: number) => api.get(`getLeagueTeams/${id}`),\n  fetchTeamPlayers: (id: number) => api.get(`getTeamPlayers/${id}`),\n  fetchPlayerStat: (id: number) => api.get(`getPlayerStat/${id}`),\n  fetchTeamInfo: (id: number) => api.get(`getTeamInfo/${id}`),\n  fetchAllPlayers: () => api.get(`getAllPlayerInfo`),\n  fetchLiveGames: () => socketServer.get(`getLiveGames`),\n  fetchTeamsByLeagueId: (id: number) => api.get(`getLeagueTeams/${id}`),\n  fetchAllPlayersBatterStat: () => api.get(`getAllPlayerBatterStat`),\n  fetchAllPlayersPithcherStat: () => api.get(`getAllPlayerPitcherStat`),\n  fetchTeamPlayerBatterStat: (id: number) =>\n    api.get(`getTeamPlayerBatterStat/${id}`),\n  fetchTeamPlayerPitcherStat: (id: number) =>\n    api.get(`getTeamPlayerPitcherStat/${id}`),\n};\n\nexport default apis;\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","import React, { useState, useEffect } from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport apis from \"../../apis\";\nimport { INowLive } from \"../../interfaces/nowLive\";\n\nconst HomeContainer: React.FC<{}> = () => {\n  const [live, setLive] = useState<INowLive[] | null>(null);\n  useEffect(() => {\n    const fetchLiveGames = async () => {\n      try {\n        const { data: live } = await apis.fetchLiveGames();\n        setLive(live);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    fetchLiveGames();\n  }, []);\n  return (\n    <div>\n      {live === null ? <div>Loading...</div> : <HomePresenter live={live} />}\n    </div>\n  );\n};\n\nexport default HomeContainer;\n","import React from \"react\";\nimport { ILive } from \"../interfaces/live\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\ninterface IProps {\n  live: ILive;\n}\n\nconst Away = styled.div`\n  padding-bottom: 20px;\n`;\n\nconst Home = styled.div`\n  padding-bottom: 20px;\n`;\n\nconst Name = styled.div`\n  font-size: 20px;\n  font-weight: 700;\n  padding: 20px 0;\n  padding-left: 10px;\n`;\n\nconst Table = styled.table`\n  width: 100%;\n  td {\n    text-align: center;\n    padding: 10px 0;\n    padding-top: 13px;\n    font-size: 13px;\n    border-bottom: 1px solid #f2f2f2;\n  }\n`;\n\nconst TitleTr = styled.tr`\n  background-color: #2450aa;\n  color: #fff;\n  font-weight: 500;\n  font-size: 12px;\n`;\n\nconst Pinch = styled.span`\n  font-size: 10px;\n  opacity: 0.7;\n`;\n\nconst SLink = styled(Link)`\n  width: 100%;\n  text-align: center;\n`;\n\nconst Record: React.FC<IProps> = ({ live }) => {\n  return (\n    <div>\n      <Away>\n        <Name>{live.away.name}</Name>\n        <Table>\n          <tbody>\n            <TitleTr>\n              <td></td>\n              <td>타수</td>\n              <td>안타</td>\n              <td>2루타</td>\n              <td>3루타</td>\n              <td>타점</td>\n              <td>득점</td>\n              <td>홈런</td>\n              <td>볼넷</td>\n            </TitleTr>\n            {live.away.batterInfo.map((info) => {\n              return info.batters.map((batter, index) => (\n                <tr key={index}>\n                  <td>\n                    <SLink to={`/stat/${batter.ID}`}>\n                      {batter.name}{\" \"}\n                      {info.now !== 0 && index !== 0 && <Pinch>대</Pinch>}\n                    </SLink>\n                  </td>\n                  <td>{batter.stat.AB}</td>\n                  <td>{batter.stat.H}</td>\n                  <td>{batter.stat._2B}</td>\n                  <td>{batter.stat._3B}</td>\n                  <td>{batter.stat.RBI}</td>\n                  <td>{batter.stat.R}</td>\n                  <td>{batter.stat.HR}</td>\n                  <td>{batter.stat.BB + batter.stat.HBP}</td>\n                </tr>\n              ));\n            })}\n          </tbody>\n        </Table>\n        <Table>\n          <tbody>\n            <TitleTr>\n              <td></td>\n              <td>이닝</td>\n              <td>자책</td>\n              <td>볼넷</td>\n              <td>삼진</td>\n              <td>피안타</td>\n              <td>투구수</td>\n            </TitleTr>\n            {live.away.pitcherInfo.map((pitcher, index) => (\n              <tr key={index}>\n                <td>{pitcher.name}</td>\n                <td>{pitcher.stat.IP}</td>\n                <td>{pitcher.stat.ER}</td>\n                <td>{pitcher.stat.BB}</td>\n                <td>{pitcher.stat.SO}</td>\n                <td>{pitcher.stat.H}</td>\n                <td>{pitcher.stat.NP}</td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </Away>\n      <Home>\n        <Name>{live.home.name}</Name>\n        <Table>\n          <tbody>\n            <TitleTr>\n              <td></td>\n              <td>타수</td>\n              <td>안타</td>\n              <td>2루타</td>\n              <td>3루타</td>\n              <td>타점</td>\n              <td>득점</td>\n              <td>홈런</td>\n              <td>볼넷</td>\n            </TitleTr>\n            {live.home.batterInfo.map((info) => {\n              return info.batters.map((batter, index) => (\n                <tr key={index}>\n                  <td>\n                    <SLink to={`/stat/${batter.ID}`}>\n                      {batter.name}{\" \"}\n                      {info.now !== 0 && index !== 0 && <Pinch>대</Pinch>}\n                    </SLink>\n                  </td>\n                  <td>{batter.stat.AB}</td>\n                  <td>{batter.stat.H}</td>\n                  <td>{batter.stat._2B}</td>\n                  <td>{batter.stat._3B}</td>\n                  <td>{batter.stat.RBI}</td>\n                  <td>{batter.stat.R}</td>\n                  <td>{batter.stat.HR}</td>\n                  <td>{batter.stat.BB + batter.stat.HBP}</td>\n                </tr>\n              ));\n            })}\n          </tbody>\n        </Table>\n        <Table>\n          <tbody>\n            <TitleTr>\n              <td></td>\n              <td>이닝</td>\n              <td>자책</td>\n              <td>볼넷</td>\n              <td>삼진</td>\n              <td>피안타</td>\n              <td>투구수</td>\n            </TitleTr>\n            {live.home.pitcherInfo.map((pitcher, index) => (\n              <tr key={index}>\n                <td>{pitcher.name}</td>\n                <td>{pitcher.stat.IP}</td>\n                <td>{pitcher.stat.ER}</td>\n                <td>{pitcher.stat.BB}</td>\n                <td>{pitcher.stat.SO}</td>\n                <td>{pitcher.stat.H}</td>\n                <td>{pitcher.stat.NP}</td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </Home>\n    </div>\n  );\n};\n\nexport default Record;\n","import React, { useState, useEffect } from \"react\";\nimport { ILive } from \"../interfaces/live\";\nimport styled from \"styled-components\";\n\ninterface IProps {\n  live: ILive;\n}\n\nconst ScoreContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 25px 5px;\n  background-color: #2450aa;\n  color: #fff;\n`;\n\nconst TeamScore = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Team = styled.div`\n  font-size: 15px;\n  font-weight: 600;\n  margin-bottom: 15px;\n  opacity: 0.8;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  div:nth-child(1) {\n    margin-bottom: 5px;\n  }\n`;\n\nconst Score = styled.div`\n  font-size: 44px;\n  font-weight: 700;\n`;\n\nconst VSContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  font-size: 16px;\n  font-weight: 700;\n  position: relative;\n`;\n\nconst Ground = styled.div`\n  width: 100%;\n  position: absolute;\n  top: 25px;\n  font-size: 12px;\n  font-weight: 500;\n  opacity: 0.8;\n  text-align: center;\n`;\n\nconst Board = styled.div`\n  width: 100%;\n  background-color: #1d4aa1;\n  color: #fff;\n  padding: 10px 5px;\n  display: flex;\n  justify-content: center;\n  font-size: 14px;\n`;\n\nconst Table = styled.table`\n  width: 100%;\n  text-align: center;\n  td {\n    padding: 5px 4px;\n  }\n`;\n\nconst Inning = styled.tr`\n  opacity: 0.7;\n  td {\n    padding-bottom: 10px;\n  }\n`;\n\nconst TotalScore = styled.td`\n  color: #7efff5;\n`;\n\nconst Scoreboard: React.FC<IProps> = ({ live }) => {\n  const [awayHits, setAwayHits] = useState<number>(0);\n  const [homeHits, setHomeHits] = useState<number>(0);\n  const [awayErr, setAwayErr] = useState<number>(0);\n  const [homeErr, setHomeErr] = useState<number>(0);\n  const [awayBB, setAwayBB] = useState<number>(0);\n  const [homeBB, setHomeBB] = useState<number>(0);\n  useEffect(() => {\n    const awayBatterInfo = live.away.batterInfo;\n    const homeBatterInfo = live.home.batterInfo;\n    let awayHits = 0,\n      homeHits = 0,\n      awayErr = 0,\n      homeErr = 0,\n      awayBB = 0,\n      homeBB = 0;\n    awayBatterInfo.forEach((away) => {\n      away.batters.forEach((batter) => {\n        awayHits += batter.stat.H;\n        awayErr += batter.stat.E;\n        awayBB += batter.stat.BB;\n        awayBB += batter.stat.HBP;\n      });\n    });\n    homeBatterInfo.forEach((home) => {\n      home.batters.forEach((batter) => {\n        homeHits += batter.stat.H;\n        homeErr += batter.stat.E;\n        homeBB += batter.stat.BB;\n        homeBB += batter.stat.HBP;\n      });\n    });\n    setAwayHits(awayHits);\n    setHomeHits(homeHits);\n    setAwayErr(awayErr);\n    setHomeErr(homeErr);\n    setAwayBB(awayBB);\n    setHomeBB(homeBB);\n  }, [live]);\n  return (\n    <div>\n      <ScoreContainer>\n        <TeamScore>\n          <Team>\n            <div>{live.away.name.split(\" \")[0]}</div>\n            <div>{live.away.name.split(\" \")[1]}</div>\n          </Team>\n          <Score>{live.away.totalScore}</Score>\n        </TeamScore>\n        <VSContainer>\n          <div>VS</div>\n          <Ground>{live.ground}</Ground>\n        </VSContainer>\n        <TeamScore>\n          <Team>\n            <div>{live.home.name.split(\" \")[0]}</div>\n            <div>{live.home.name.split(\" \")[1]}</div>\n          </Team>\n          <Score>{live.home.totalScore}</Score>\n        </TeamScore>\n      </ScoreContainer>\n      <Board>\n        <Table>\n          <tbody>\n            <Inning>\n              <td></td>\n              <td>1</td>\n              <td>2</td>\n              <td>3</td>\n              <td>4</td>\n              <td>5</td>\n              <td>6</td>\n              <td>7</td>\n              <td>8</td>\n              <td>9</td>\n              <TotalScore>R</TotalScore>\n              <td>H</td>\n              <td>E</td>\n              <td>B</td>\n            </Inning>\n            <tr>\n              <td>{live.away.name.split(\" \")[0]}</td>\n              {live.away.score.map((s, index) => (\n                <td key={index}>{live.nowInning - 1 >= index ? s : \"\"}</td>\n              ))}\n              <TotalScore>{live.away.totalScore}</TotalScore>\n              <td>{awayHits}</td>\n              <td>{homeErr}</td>\n              <td>{awayBB}</td>\n            </tr>\n            <tr>\n              <td>{live.home.name.split(\" \")[0]}</td>\n              {live.home.score.map((s, index) => (\n                <td key={index}>\n                  {live.nowInning - 1 > index\n                    ? s\n                    : live.nowInning - 1 === index && live.nowTopBottom\n                    ? s\n                    : \"\"}\n                </td>\n              ))}\n              <TotalScore>{live.home.totalScore}</TotalScore>\n              <td>{homeHits}</td>\n              <td>{awayErr}</td>\n              <td>{homeBB}</td>\n            </tr>\n          </tbody>\n        </Table>\n      </Board>\n    </div>\n  );\n};\n\nexport default Scoreboard;\n","import React, { useState, useEffect } from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport socketio from \"socket.io-client\";\nimport styled from \"styled-components\";\nimport { ILive } from \"../..//interfaces/live\";\nimport Record from \"../../components/Record\";\nimport Scoreboard from \"../../components/Scoreboard\";\nimport \"./Main.css\";\n\nconst socket: any = socketio.connect(\"http://49.50.172.42:3002/\");\nconst inning: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\ninterface MatchParams {\n  id: string;\n}\n\nconst BroadcastContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ButtonContainer = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  background-color: #5d93d2;\n  overflow: scroll;\n`;\n\nconst Button: any = styled.button`\n  width: 100%;\n  padding: 10px 0;\n  background-color: ${(props) => (props.disabled ? \"#5d93d2\" : \"#1D4AA0\")};\n  color: #fff;\n  font-weight: 600;\n  opacity: ${(props) => (props.disabled ? \"0.7\" : \"1\")};\n  border: none;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: ${(props) => (props.disabled ? \"default\" : \"pointer\")}; ;\n`;\n\nconst NavigationContainer = styled.div`\n  width: 100%;\n  display: flex;\n`;\n\nconst Nav: any = styled.button`\n  width: 100%;\n  background-color: #2450aa;\n  border: none;\n  padding: 10px;\n  color: #fff;\n  font-weight: 500;\n  cursor: pointer;\n`;\n\nconst Textcast = styled.div`\n  padding: 10px;\n`;\n\nconst Main: React.FC<RouteComponentProps<MatchParams>> = ({ match }) => {\n  const [live, setLive] = useState<ILive | null>(null);\n  const [currentInning, setCurrentInning] = useState<number>(-1);\n  const [isBroadcast, setIsBroadcast] = useState<boolean>(true);\n  useEffect(() => {\n    socket.emit(\"joinLive\", match.params.id);\n    socket.emit(\"getLiveCast\", match.params.id);\n    // 전송 누를 때마다\n    socket.on(\"sendLiveCast\", (live: ILive) => {\n      console.log(live);\n      setLive(live);\n      setCurrentInning(live.nowInning);\n    });\n    socket.on(\"liveCast\", (live: ILive) => {\n      console.log(live);\n      setLive(live);\n      setCurrentInning(live.nowInning);\n    });\n  }, []);\n  const handleClick = (e: any) => {\n    const target = e.target as HTMLButtonElement;\n    setCurrentInning(parseInt(target.innerText));\n  };\n  useEffect(() => {\n    console.log(currentInning);\n  }, [currentInning]);\n  return (\n    <div>\n      {live === null ? (\n        <div>No Game</div>\n      ) : (\n        <>\n          <Scoreboard live={{ ...live }} />\n          <NavigationContainer>\n            <Nav onClick={() => setIsBroadcast(true)}>중계</Nav>\n            <Nav onClick={() => setIsBroadcast(false)}>기록</Nav>\n          </NavigationContainer>\n          {isBroadcast ? (\n            <BroadcastContainer>\n              <ButtonContainer>\n                {inning.map((inn) => (\n                  <Button\n                    inning={inn}\n                    key={inn}\n                    onClick={handleClick}\n                    disabled={live.nowInning < inn}\n                  >\n                    {`${inn}회`}\n                  </Button>\n                ))}\n              </ButtonContainer>\n              <Textcast\n                dangerouslySetInnerHTML={{\n                  __html:\n                    currentInning === -1\n                      ? live.textCast[0]\n                      : live.textCast[currentInning - 1],\n                }}\n              />\n            </BroadcastContainer>\n          ) : (\n            <Record live={live} />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Main;\n","import React from \"react\";\n\nconst NotFound: React.FC<{}> = () => {\n  return <div>404 Not Found</div>;\n};\n\nexport default NotFound;\n","import React, { useState } from \"react\";\nimport { IStat } from \"../../interfaces/stat\";\nimport styled from \"styled-components\";\n\ninterface IStatProps {\n  stat: IStat;\n}\n\nconst TeamName = styled.div`\n  font-size: 18px;\n  font-weight: 600;\n  margin-bottom: 10px;\n`;\n\nconst Name = styled.div`\n  font-size: 16px;\n  font-weight: 500;\n  margin-bottom: 10px;\n`;\n\nconst Birth = styled.div``;\n\nconst Img = styled.div`\n  width: 100%;\n  height: 200px;\n  border: 1px solid gray;\n  margin-right: 30px;\n`;\n\nconst GroundWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Ground = styled.div`\n  margin-top: 20px;\n  width: 350px;\n  height: 350px;\n  position: relative;\n  background: url(\"/images/ground.png\");\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: center;\n  color: #fff;\n  font-weight: 600;\n  div {\n    font-size: 14px;\n  }\n`;\n\nconst GroundImg = styled.img`\n  width: 100%;\n  position: relative;\n`;\n\nconst Info = styled.div`\n  width: 100%;\n  text-align: left;\n`;\n\nconst Container = styled.div`\n  width: 100%;\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst PlayerInfo = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 10px;\n  margin-bottom: 10px;\n`;\n\nconst Total = styled.div`\n  font-size: 20px;\n  font-weight: 600;\n  margin: 20px 0;\n`;\n\nconst Record = styled.div`\n  width: 100%;\n  font-size: 16px;\n`;\n\nconst TableWrapper = styled.div`\n  width: 100%;\n  overflow: scroll;\n  margin-bottom: 20px;\n`;\n\nconst Table = styled.table`\n  width: 100%;\n  td {\n    text-align: center;\n    padding: 10px 15px;\n    padding-top: 12px;\n    white-space: nowrap;\n    font-weight: 500;\n  }\n  tr:nth-child(1) {\n    background-color: #2450aa;\n    color: #fff;\n    font-weight: 600;\n  }\n`;\n\nconst BtnWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  margin-bottom: 10px;\n  font-weight: 600;\n`;\n\nconst Batter: any = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  border-right: 1px solid #c2c2c2;\n  color: ${(props: any) => (props.isOn ? \"#2450aa\" : \"#000\")};\n`;\n\nconst Pitcher: any = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  color: ${(props: any) => (props.isOn ? \"#2450aa\" : \"#000\")};\n`;\n\nconst P = styled.div`\n  position: absolute;\n  top: 59%;\n  left: 45%;\n  color: #000;\n`;\nconst C = styled.div`\n  position: absolute;\n  top: 78%;\n  left: 45%;\n  color: #000;\n`;\nconst F = styled.div`\n  position: absolute;\n  top: 59%;\n  left: 63%;\n  color: #000;\n`;\nconst S = styled.div`\n  position: absolute;\n  top: 45%;\n  left: 56%;\n  color: #000;\n`;\nconst T = styled.div`\n  position: absolute;\n  top: 59%;\n  left: 25%;\n  color: #000;\n`;\nconst SS = styled.div`\n  position: absolute;\n  top: 45%;\n  left: 32%;\n  color: #000;\n`;\nconst LF = styled.div`\n  position: absolute;\n  top: 30%;\n  left: 18%;\n`;\nconst CF = styled.div`\n  position: absolute;\n  top: 23%;\n  left: 45%;\n`;\nconst RF = styled.div`\n  position: absolute;\n  top: 30%;\n  left: 72%;\n`;\nconst LC = styled.div`\n  position: absolute;\n  top: 20%;\n  left: 27%;\n`;\nconst RC = styled.div`\n  position: absolute;\n  top: 20%;\n  left: 65%;\n`;\nconst GO = styled.div`\n  color: #000;\n  position: absolute;\n  bottom: 17%;\n  left: 5%;\n`;\nconst FO = styled.div`\n  color: #000;\n  position: absolute;\n  bottom: 12%;\n  left: 5%;\n`;\nconst LO = styled.div`\n  color: #000;\n  position: absolute;\n  bottom: 7%;\n  left: 5%;\n`;\nconst BatterName = styled.div`\n  color: #000;\n  position: absolute;\n  bottom: 22%;\n  left: 5%;\n  font-weight: 600;\n`;\n\nconst StatPresenter: React.FC<IStatProps> = ({ stat }) => {\n  const [isBatter, setIsBatter] = useState<boolean>(true);\n  const [isPitcher, setIsPitcher] = useState<boolean>(false);\n  console.log(stat);\n  const { batter_stat: s, player_info: i, pitcher_stat: p } = stat;\n  const handleBatter = () => {\n    setIsBatter(true);\n    setIsPitcher(false);\n  };\n  const handlePitcher = () => {\n    setIsBatter(false);\n    setIsPitcher(true);\n  };\n  const calcAvg = (rec: number) => {\n    const total =\n      s.total.P +\n      s.total.C +\n      s.total.FRISTBASE +\n      s.total.SECONDBASE +\n      s.total.THIRDBASE +\n      s.total.SS +\n      s.total.LF +\n      s.total.CF +\n      s.total.RF +\n      s.total.LC +\n      s.total.RC;\n    return `${((rec / total) * 100).toFixed(1)}%`;\n  };\n  return (\n    <>\n      <Container>\n        <PlayerInfo>\n          <Img>stat.img</Img>\n          <Info>\n            <TeamName>{i.teamName}</TeamName>\n            <Name>\n              {i.playerName} No. {i.backNum}\n            </Name>\n            <Birth>{i.birthday.substring(0, 10).split(\"-\").join(\"/\")}</Birth>\n          </Info>\n        </PlayerInfo>\n        <Record>\n          <Total>선수 기록 - {isBatter ? \"타자\" : \"투수\"}</Total>\n          <BtnWrapper>\n            <Batter onClick={handleBatter} isOn={isBatter}>\n              타자\n            </Batter>\n            <Pitcher onClick={handlePitcher} isOn={isPitcher}>\n              투수\n            </Pitcher>\n          </BtnWrapper>\n          {isBatter ? (\n            <>\n              <TableWrapper>\n                <Table>\n                  <tbody>\n                    <tr>\n                      <td>시즌</td>\n                      <td>AVG</td>\n                      <td>G</td>\n                      <td>PA</td>\n                      <td>AB</td>\n                      <td>R</td>\n                      <td>H</td>\n                      <td>2B</td>\n                      <td>3B</td>\n                      <td>HR</td>\n                      <td>TB</td>\n                      <td>RBI</td>\n                      <td>SB</td>\n                      <td>CS</td>\n                      <td>SAC</td>\n                      <td>SF</td>\n                      <td>BB</td>\n                      <td>IBB</td>\n                      <td>HBP</td>\n                      <td>SO</td>\n                      <td>GDP</td>\n                      <td>SLG</td>\n                      <td>OBP</td>\n                      <td>OPS</td>\n                    </tr>\n                    <tr>\n                      <td>통산</td>\n                      <td>{s.total.AVG && s.total.AVG.toFixed(3)}</td>\n                      <td>{s.total.G}</td>\n                      <td>{s.total.PA}</td>\n                      <td>{s.total.AB}</td>\n                      <td>{s.total.R}</td>\n                      <td>{s.total.H}</td>\n                      <td>{s.total._2B}</td>\n                      <td>{s.total._3B}</td>\n                      <td>{s.total.HR}</td>\n                      <td>{s.total.TB}</td>\n                      <td>{s.total.RBI}</td>\n                      <td>{s.total.SB}</td>\n                      <td>{s.total.CS}</td>\n                      <td>{s.total.SAC}</td>\n                      <td>{s.total.SF}</td>\n                      <td>{s.total.BB}</td>\n                      <td>{s.total.IBB}</td>\n                      <td>{s.total.HBP}</td>\n                      <td>{s.total.SO}</td>\n                      <td>{s.total.GDP}</td>\n                      <td>{s.total.SLG && s.total.SLG.toFixed(3)}</td>\n                      <td>{s.total.OBP && s.total.OBP.toFixed(3)}</td>\n                      <td>{s.total.OPS && s.total.OPS.toFixed(3)}</td>\n                    </tr>\n                    {s.yearly.map((y) => (\n                      <tr key={y.year}>\n                        <td>{y.year}</td>\n                        <td>{y.AVG && y.AVG.toFixed(3)}</td>\n                        <td>{y.G}</td>\n                        <td>{y.PA}</td>\n                        <td>{y.AB}</td>\n                        <td>{y.R}</td>\n                        <td>{y.H}</td>\n                        <td>{y._2B}</td>\n                        <td>{y._3B}</td>\n                        <td>{y.HR}</td>\n                        <td>{y.TB}</td>\n                        <td>{y.RBI}</td>\n                        <td>{y.SB}</td>\n                        <td>{y.CS}</td>\n                        <td>{y.SAC}</td>\n                        <td>{y.SF}</td>\n                        <td>{y.BB}</td>\n                        <td>{y.IBB}</td>\n                        <td>{y.HBP}</td>\n                        <td>{y.SO}</td>\n                        <td>{y.GDP}</td>\n                        <td>{y.SLG && y.SLG.toFixed(3)}</td>\n                        <td>{y.OBP && y.OBP.toFixed(3)}</td>\n                        <td>{y.OPS && y.OPS.toFixed(3)}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </Table>\n              </TableWrapper>\n              <Total>타구 분포도</Total>\n              <GroundWrapper>\n                <Ground>\n                  <P>{calcAvg(s.total.P)}</P>\n                  <C>{calcAvg(s.total.C)}</C>\n                  <F>{calcAvg(s.total.FRISTBASE)}</F>\n                  <S>{calcAvg(s.total.SECONDBASE)}</S>\n                  <T>{calcAvg(s.total.THIRDBASE)}</T>\n                  <SS>{calcAvg(s.total.SS)}</SS>\n                  <LF>{calcAvg(s.total.LF)}</LF>\n                  <CF>{calcAvg(s.total.CF)}</CF>\n                  <RF>{calcAvg(s.total.RF)}</RF>\n                  <LC>{calcAvg(s.total.LC)}</LC>\n                  <RC>{calcAvg(s.total.RC)}</RC>\n                  <GO>GO: {s.total.GO}</GO>\n                  <FO>FO: {s.total.FO}</FO>\n                  <LO>LO: {s.total.LO}</LO>\n                  <BatterName>{i.playerName}</BatterName>\n                </Ground>\n              </GroundWrapper>\n            </>\n          ) : (\n            <TableWrapper>\n              <Table>\n                <tbody>\n                  <tr>\n                    <td>시즌</td>\n                    <td>ERA</td>\n                    <td>G</td>\n                    <td>W</td>\n                    <td>L</td>\n                    <td>HLD</td>\n                    <td>SV</td>\n                    <td>IP</td>\n                    <td>H</td>\n                    <td>AB</td>\n                    <td>BB</td>\n                    <td>BK</td>\n                    <td>Batters</td>\n                    <td>ER</td>\n                    <td>HBP</td>\n                    <td>HR</td>\n                    <td>K</td>\n                    <td>NP</td>\n                    <td>R</td>\n                    <td>SAC</td>\n                    <td>SF</td>\n                    <td>WP</td>\n                  </tr>\n                  <tr>\n                    <td>통산</td>\n                    <td>{p.total.ERA && p.total.ERA.toFixed(2)}</td>\n                    <td>{p.total.G}</td>\n                    <td>{p.total.W}</td>\n                    <td>{p.total.L}</td>\n                    <td>{p.total.HLD}</td>\n                    <td>{p.total.SV}</td>\n                    <td>{p.total.IP}</td>\n                    <td>{p.total.H}</td>\n                    <td>{p.total.AB}</td>\n                    <td>{p.total.BB}</td>\n                    <td>{p.total.BK}</td>\n                    <td>{p.total.Batters}</td>\n                    <td>{p.total.ER}</td>\n                    <td>{p.total.HBP}</td>\n                    <td>{p.total.HR}</td>\n                    <td>{p.total.K}</td>\n                    <td>{p.total.NP}</td>\n                    <td>{p.total.R}</td>\n                    <td>{p.total.SAC}</td>\n                    <td>{p.total.SF}</td>\n                    <td>{p.total.WP}</td>\n                  </tr>\n                  {p.yearly.map((y) => (\n                    <tr key={y.year}>\n                      <td>{y.year}</td>\n                      <td>{y.ERA && y.ERA.toFixed(2)}</td>\n                      <td>{y.G}</td>\n                      <td>{y.W}</td>\n                      <td>{y.L}</td>\n                      <td>{y.HLD}</td>\n                      <td>{y.SV}</td>\n                      <td>{y.IP}</td>\n                      <td>{y.H}</td>\n                      <td>{y.AB}</td>\n                      <td>{y.BB}</td>\n                      <td>{y.BK}</td>\n                      <td>{y.Batters}</td>\n                      <td>{y.ER}</td>\n                      <td>{y.HBP}</td>\n                      <td>{y.HR}</td>\n                      <td>{y.K}</td>\n                      <td>{y.NP}</td>\n                      <td>{y.R}</td>\n                      <td>{y.SAC}</td>\n                      <td>{y.SF}</td>\n\n                      <td>{y.WP}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </Table>\n            </TableWrapper>\n          )}\n        </Record>\n      </Container>\n    </>\n  );\n};\n\nexport default StatPresenter;\n","import StatContainer from \"./StatContainer\";\n\nexport default StatContainer;\n","import React, { useState, useEffect } from \"react\";\nimport StatPresenter from \"./StatPresenter\";\nimport { IStat } from \"../../interfaces/stat\";\nimport apis from \"../../apis\";\nimport { RouteComponentProps } from \"react-router-dom\";\n\ninterface MatchProps {\n  id: string;\n}\n\nconst StatContainer: React.FC<RouteComponentProps<MatchProps>> = ({\n  match,\n}) => {\n  const [stat, setStat] = useState<IStat | null>(null);\n  useEffect(() => {\n    const fetchStat = async (id: number) => {\n      try {\n        const { data: stat } = await apis.fetchPlayerStat(id);\n        setStat(stat);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    const id = parseInt(match.params.id);\n    fetchStat(id);\n  }, []);\n  return (\n    <div>\n      {stat === null ? <div>Loading...</div> : <StatPresenter stat={stat} />}\n    </div>\n  );\n};\n\nexport default StatContainer;\n","import React, { useState, useEffect } from \"react\";\nimport { IPlayerInfo } from \"../../interfaces/stat\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nlet dataPerPage = 30;\n\ninterface ISearch {\n  player: IPlayerInfo[];\n}\n\nconst Wrapper = styled.div`\n  padding: 20px;\n`;\n\nconst Title = styled.div`\n  font-size: 20px;\n  font-weight: 600;\n  margin-top: 10px;\n  margin-bottom: 20px;\n`;\n\nconst InputForm = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  outline: none;\n  border: none;\n  border: 2px solid #c2c2c2;\n  font-size: 18px;\n  padding: 5px 10px;\n  margin-right: 15px;\n`;\n\nconst Btn = styled.div`\n  opacity: 0.7;\n  font-size: 18px;\n`;\n\nconst TableWrapper = styled.div`\n  width: 100%;\n  overflow: scroll;\n`;\n\nconst Table = styled.table`\n  width: 100%;\n  tr:nth-child(1) {\n    background-color: #2450aa;\n    color: #fff;\n    font-weight: 600;\n    white-space: nowrap;\n  }\n  td {\n    text-align: center;\n    padding: 10px;\n    padding-top: 12px;\n    border-bottom: 1px solid #f2f2f2;\n  }\n`;\n\nconst Pagination = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 20px;\n  padding: 10px 0;\n`;\n\nconst Button: any = styled.button`\n  all: unset;\n  font-weight: 600;\n  color: ${(props: any) => (props.select ? \"#2450aa\" : \"#999\")};\n`;\n\nconst SLink = styled(Link)`\n  width: 100%;\n`;\n\nconst SearchPresenter: React.FC<ISearch> = ({ player }) => {\n  const [term, setTerm] = useState<string>(\"\");\n  const [filtered, setFiltered] = useState<IPlayerInfo[] | null>(null);\n  const [page, setPage] = useState<number>(0);\n  const [pageData, setPageData] = useState<IPlayerInfo[] | null>(null);\n  const [totalPage, setTotalPage] = useState<number>(0);\n\n  useEffect(() => {\n    setTotalPage(Math.ceil(player.length / dataPerPage));\n    setPage(0);\n  }, []);\n\n  useEffect(() => {\n    const start = page * dataPerPage;\n    const end = page * dataPerPage + dataPerPage;\n    if (!filtered) {\n      setPageData(player.slice(start, end));\n    } else {\n      setPageData(filtered.slice(start, end));\n    }\n  }, [page]);\n\n  const handlePageClick = (e: React.MouseEvent<HTMLButtonElement>) => {\n    const target = e.target as HTMLButtonElement;\n    setPage(parseInt(target.innerText) - 1);\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setTerm(e.target.value);\n  };\n\n  const handleRightArrowClick = () => {\n    if (page === totalPage - 1) return false;\n    setPage((page) => page + 1);\n  };\n\n  const handleLeftArrowClick = () => {\n    if (page === 0) return false;\n    setPage((page) => page - 1);\n  };\n\n  const handleClick = () => {\n    const start = page * dataPerPage;\n    const end = page * dataPerPage + dataPerPage;\n    if (term === \"\") {\n      setFiltered(null);\n      setPage(0);\n      setTotalPage(Math.ceil(player.length / dataPerPage));\n      setPageData(player.slice(start, end));\n      return -1;\n    }\n    const filtered = player.filter(\n      (p) => p.playerName.includes(term) || p.teamName.includes(term)\n    );\n    setPage(0);\n    setTotalPage(Math.ceil(filtered.length / dataPerPage));\n    setFiltered(filtered);\n    setPageData(filtered.slice(start, end));\n  };\n\n  const handleKeyPress = (e: any) => {\n    if (e.key === \"Enter\") handleClick();\n  };\n  return (\n    <Wrapper>\n      <Title>선수 정보</Title>\n      <InputForm>\n        <Input\n          type=\"text\"\n          onChange={handleChange}\n          onKeyPress={handleKeyPress}\n        />\n        <Btn onClick={handleClick}>\n          <i className=\"fas fa-search\"></i>\n        </Btn>\n      </InputForm>\n      <div>\n        <div></div>\n        {pageData === null ? (\n          <div>Loading...</div>\n        ) : (\n          <TableWrapper>\n            <Table>\n              <tbody>\n                <tr>\n                  <td>선수명</td>\n                  <td>소속</td>\n                  <td>등번호</td>\n                </tr>\n                {pageData.map((p) => (\n                  <tr key={p.playerId}>\n                    <td>\n                      <SLink to={`/stat/${p.playerId}`}>{p.playerName}</SLink>\n                    </td>\n                    <td>\n                      <SLink to={`/stat/${p.playerId}`}>{p.teamName}</SLink>\n                    </td>\n                    <td>\n                      <SLink to={`/stat/${p.playerId}`}>{p.backNum}</SLink>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          </TableWrapper>\n        )}\n        {totalPage !== 0 && (\n          <Pagination>\n            <div onClick={handleLeftArrowClick}>{`<`}</div>\n            {[...Array(totalPage)].map((t, i) => {\n              if (page < 3) {\n                if (i <= 4) {\n                  return (\n                    <Button\n                      onClick={handlePageClick}\n                      key={i}\n                      select={page === i}\n                    >\n                      {i + 1}\n                    </Button>\n                  );\n                }\n              } else if (page <= totalPage - 3) {\n                if (i >= page - 2 && i <= page + 2)\n                  return (\n                    <Button\n                      onClick={handlePageClick}\n                      key={i}\n                      select={page === i}\n                    >\n                      {i + 1}\n                    </Button>\n                  );\n              } else {\n                if (i >= totalPage - 5 && i <= totalPage - 1)\n                  return (\n                    <Button\n                      onClick={handlePageClick}\n                      key={i}\n                      select={page === i}\n                    >\n                      {i + 1}\n                    </Button>\n                  );\n              }\n            })}\n            <div onClick={handleRightArrowClick}>{`>`}</div>\n          </Pagination>\n        )}\n      </div>\n    </Wrapper>\n  );\n};\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import React, { useState, useEffect } from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport apis from \"../../apis\";\nimport { IPlayerInfo } from \"../../interfaces/stat\";\n\nconst SearchContainer: React.FC<{}> = () => {\n  const [player, setPlayer] = useState<IPlayerInfo[] | null>(null);\n  useEffect(() => {\n    const fetchAllPlayers = async () => {\n      try {\n        const { data: player } = await apis.fetchAllPlayers();\n        setPlayer(player);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    fetchAllPlayers();\n  }, []);\n\n  return (\n    <div>\n      {player === null ? (\n        <div>Loading...</div>\n      ) : (\n        <>\n          <SearchPresenter player={player} />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default SearchContainer;\n","import React, { useState } from \"react\";\nimport { ITeamInfo } from \"../../interfaces/team\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\ninterface IProps {\n  teams: ITeamInfo[];\n}\n\nconst List = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  padding: 5px 10px;\n  font-weight: 500;\n  border-bottom: 1px solid #f2f2f2;\n`;\n\nconst LeaguePresenter: React.FC<IProps> = ({ teams }) => {\n  console.log(teams);\n  return (\n    <div>\n      <div>\n        {teams.map((team) => (\n          <List key={team.teamId}>\n            <Link to={`/teams/${team.teamId}`}>{team.teamName}</Link>\n          </List>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default LeaguePresenter;\n","import React, { useState, useEffect, ChangeEvent } from \"react\";\nimport apis from \"../../apis\";\nimport LeaguePresenter from \"./LeaguePresenter\";\nimport { ITeamInfo } from \"../../interfaces/team\";\nimport styled from \"styled-components\";\n\ninterface ILeague {\n  leagueId: number;\n  leagueName: string;\n}\n\nconst Select = styled.select`\n  width: 100%;\n  padding: 10px;\n  font-size: 16px;\n  font-weight: 600;\n  margin-bottom: 10px;\n`;\n\nconst LeagueContainer: React.FC<{}> = () => {\n  const [league, setLeague] = useState<ILeague[] | null>(null);\n  const [leagueId, setLeagueId] = useState<number>(1);\n  const [teams, setTeams] = useState<ITeamInfo[] | null>(null);\n  useEffect(() => {\n    const fetchLeague = async () => {\n      try {\n        const { data: league } = await apis.fetchLeague();\n        setLeague(league);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    fetchLeague();\n  }, []);\n  useEffect(() => {\n    const fetchTeamsbyLeagueId = async () => {\n      if (leagueId > 0) {\n        try {\n          const { data: teams } = await apis.fetchTeamsByLeagueId(leagueId);\n          teams.sort((a: ITeamInfo, b: ITeamInfo) => {\n            if (a.teamName < b.teamName) {\n              return -1;\n            }\n            if (a.teamName > b.teamName) {\n              return 1;\n            }\n            return 0;\n          });\n          setTeams(teams);\n        } catch (e) {\n          console.log(e);\n        }\n      } else if (leagueId === 0) {\n        setTeams(null);\n      }\n    };\n    fetchTeamsbyLeagueId();\n  }, [leagueId]);\n  const handleChange = (e: ChangeEvent<HTMLSelectElement>) => {\n    setLeagueId(parseInt(e.target.value));\n  };\n  return (\n    <div>\n      {league === null ? (\n        <div>Loading ... </div>\n      ) : (\n        <div>\n          <Select onChange={handleChange} defaultValue=\"1\">\n            {league.map((l) => (\n              <option value={l.leagueId} key={l.leagueId}>\n                {l.leagueName}\n              </option>\n            ))}\n          </Select>\n          {leagueId === 0 ? (\n            <div></div>\n          ) : (\n            <div>\n              {teams === null ? (\n                <div>Loading...</div>\n              ) : (\n                <LeaguePresenter teams={teams} />\n              )}\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default LeagueContainer;\n","import LeagueContainer from \"./LeagueContainer\";\n\nexport default LeagueContainer;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { IBatterStatObj } from \"../interfaces/stat\";\nimport { Link } from \"react-router-dom\";\n\ninterface IProps {\n  batters: IBatterStatObj[];\n  handleClick?: (e: any) => void;\n}\n\nconst TableWrapper = styled.div`\n  width: 100%;\n  overflow: scroll;\n  margin-bottom: 10px;\n`;\n\nconst Table = styled.table`\n  width: 100%;\n  td {\n    text-align: center;\n    padding: 10px 15px;\n    padding-top: 12px;\n    white-space: nowrap;\n    font-weight: 500;\n  }\n  tr:nth-child(2n + 1) {\n    background-color: #f4f4f4;\n  }\n  tr:nth-child(1) {\n    background-color: #2450aa;\n    color: #fff;\n    font-weight: 600;\n  }\n`;\n\nconst Rank = styled.td`\n  color: ${(props) =>\n    props.id === \"1\"\n      ? \"#C3A935\"\n      : props.id === \"2\"\n      ? \"#BABABA\"\n      : props.id === \"3\"\n      ? \"#C77B30\"\n      : \"#000\"};\n  font-weight: ${(props) =>\n    props.id === \"1\" || props.id === \"2\" || props.id === \"3\" ? \"700\" : \"400\"};\n`;\n\nconst BatterTable: React.FC<IProps> = ({ batters, handleClick }) => {\n  return (\n    <div>\n      <TableWrapper>\n        <Table>\n          <tbody>\n            <tr onClick={handleClick}>\n              <td>랭킹</td>\n              <td>선수명</td>\n              <td>AVG</td>\n              <td>G</td>\n              <td>PA</td>\n              <td>AB</td>\n              <td>R</td>\n              <td>H</td>\n              <td>2B</td>\n              <td>3B</td>\n              <td>HR</td>\n              <td>TB</td>\n              <td>RBI</td>\n              <td>SB</td>\n              <td>CS</td>\n              <td>SAC</td>\n              <td>SF</td>\n              <td>BB</td>\n              <td>IBB</td>\n              <td>HBP</td>\n              <td>SO</td>\n              <td>GDP</td>\n              <td>SLG</td>\n              <td>OBP</td>\n              <td>OPS</td>\n            </tr>\n            {batters.map((b, i) => (\n              <tr key={b.playerId}>\n                <Rank id={`${i + 1}`}>{i + 1}</Rank>\n                <td>\n                  <Link to={`/stat/${b.playerId}`}>{b.playerName}</Link>\n                </td>\n                <td>{b.AVG && b.AVG.toFixed(3)}</td>\n                <td>{b.G}</td>\n                <td>{b.PA}</td>\n                <td>{b.AB}</td>\n                <td>{b.R}</td>\n                <td>{b.H}</td>\n                <td>{b._2B}</td>\n                <td>{b._3B}</td>\n                <td>{b.HR}</td>\n                <td>{b.TB}</td>\n                <td>{b.RBI}</td>\n                <td>{b.SB}</td>\n                <td>{b.CS}</td>\n                <td>{b.SAC}</td>\n                <td>{b.SF}</td>\n                <td>{b.BB}</td>\n                <td>{b.IBB}</td>\n                <td>{b.HBP}</td>\n                <td>{b.SO}</td>\n                <td>{b.GDP}</td>\n                <td>{b.SLG && b.SLG.toFixed(3)}</td>\n                <td>{b.OBP && b.OBP.toFixed(3)}</td>\n                <td>{b.OPS && b.OPS.toFixed(3)}</td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </TableWrapper>\n    </div>\n  );\n};\n\nexport default BatterTable;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { IPitcherObj } from \"../interfaces/stat\";\nimport { Link } from \"react-router-dom\";\n\ninterface IProps {\n  pitchers: IPitcherObj[];\n  handleClick?: (e: any) => void;\n}\n\nconst TableWrapper = styled.div`\n  width: 100%;\n  overflow: scroll;\n  margin-bottom: 10px;\n`;\n\nconst Table = styled.table`\n  width: 100%;\n  td {\n    text-align: center;\n    padding: 10px 15px;\n    padding-top: 12px;\n    white-space: nowrap;\n    font-weight: 500;\n  }\n  tr:nth-child(2n + 1) {\n    background-color: #f4f4f4;\n  }\n  tr:nth-child(1) {\n    background-color: #2450aa;\n    color: #fff;\n    font-weight: 600;\n  }\n`;\n\nconst Rank = styled.td`\n  color: ${(props) =>\n    props.id === \"1\"\n      ? \"#C3A935\"\n      : props.id === \"2\"\n      ? \"#BABABA\"\n      : props.id === \"3\"\n      ? \"#C77B30\"\n      : \"#000\"};\n  font-weight: ${(props) =>\n    props.id === \"1\" || props.id === \"2\" || props.id === \"3\" ? \"700\" : \"400\"};\n`;\n\nconst PitcherTable: React.FC<IProps> = ({ pitchers, handleClick }) => {\n  return (\n    <div>\n      <TableWrapper>\n        <Table>\n          <tbody>\n            <tr onClick={handleClick}>\n              <td>랭킹</td>\n              <td>선수명</td>\n              <td>ERA</td>\n              <td>G</td>\n              <td>W</td>\n              <td>L</td>\n              <td>HLD</td>\n              <td>SV</td>\n              <td>IP</td>\n              <td>H</td>\n              <td>AB</td>\n              <td>BB</td>\n              <td>BK</td>\n              <td>Batters</td>\n              <td>ER</td>\n              <td>HBP</td>\n              <td>HR</td>\n              <td>K</td>\n              <td>NP</td>\n              <td>R</td>\n              <td>SAC</td>\n              <td>SF</td>\n              <td>WP</td>\n            </tr>\n            {pitchers.map((p, i) => (\n              <tr key={p.playerId}>\n                <Rank id={`${i + 1}`}>{i + 1}</Rank>\n                <td>\n                  <Link to={`/stat/${p.playerId}`}>{p.playerName}</Link>\n                </td>\n                <td>{p.ERA && p.ERA.toFixed(2)}</td>\n                <td>{p.G}</td>\n                <td>{p.W}</td>\n                <td>{p.L}</td>\n                <td>{p.HLD}</td>\n                <td>{p.SV}</td>\n                <td>{p.IP}</td>\n                <td>{p.H}</td>\n                <td>{p.AB}</td>\n                <td>{p.BB}</td>\n                <td>{p.BK}</td>\n                <td>{p.Batters}</td>\n                <td>{p.ER}</td>\n                <td>{p.HBP}</td>\n                <td>{p.HR}</td>\n                <td>{p.K}</td>\n                <td>{p.NP}</td>\n                <td>{p.R}</td>\n                <td>{p.SAC}</td>\n                <td>{p.SF}</td>\n                <td>{p.WP}</td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </TableWrapper>\n    </div>\n  );\n};\n\nexport default PitcherTable;\n","import React, { ChangeEvent } from \"react\";\nimport { IBatterStatObj, IPitcherObj } from \"../../interfaces/stat\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport BatterTable from \"../../components/BatterTable\";\nimport PitcherTable from \"../../components/PitcherTable\";\n\ninterface IPresenter {\n  allYears: number[];\n  year: number;\n  batters: IBatterStatObj[];\n  pitchers: IPitcherObj[];\n  isBatter: boolean;\n  handleYearChange: (e: ChangeEvent<HTMLSelectElement>) => void;\n  handleBatterKey: (e: any) => void;\n  handlePitcherKey: (e: any) => void;\n  handleIsBatter: () => void;\n}\n\nconst Select = styled.select`\n  width: 100%;\n  padding: 10px;\n  font-size: 18px;\n  font-weight: 600;\n`;\n\nconst BtnWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  padding: 15px;\n  font-weight: 600;\n`;\n\nconst Notice = styled.div`\n  padding: 5px;\n  font-weight: 600;\n  font-size: 14px;\n  color: #2450aa;\n`;\n\nconst Batter: any = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  border-right: 1px solid #c2c2c2;\n  color: ${(props: any) => (props.isOn ? \"#2450aa\" : \"#000\")};\n`;\n\nconst Pitcher: any = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  color: ${(props: any) => (props.isOn ? \"#2450aa\" : \"#000\")};\n`;\n\nconst RecordsPresenter: React.FC<IPresenter> = ({\n  allYears,\n  year,\n  batters,\n  pitchers,\n  isBatter,\n  handleYearChange,\n  handleBatterKey,\n  handlePitcherKey,\n  handleIsBatter,\n}) => {\n  return (\n    <div>\n      <div>\n        <Select onChange={handleYearChange} defaultValue={allYears[1]}>\n          {allYears.map((y) => (\n            <option value={y} key={y}>\n              {y}\n            </option>\n          ))}\n        </Select>\n        <BtnWrapper>\n          <Batter onClick={handleIsBatter} isOn={isBatter}>\n            타자\n          </Batter>\n          <Pitcher onClick={handleIsBatter} isOn={!isBatter}>\n            투수\n          </Pitcher>\n        </BtnWrapper>\n      </div>\n      <div>\n        {isBatter ? (\n          <BatterTable\n            batters={batters.slice(0, 40)}\n            handleClick={handleBatterKey}\n          />\n        ) : (\n          <PitcherTable\n            pitchers={pitchers.slice(0, 40)}\n            handleClick={handlePitcherKey}\n          />\n        )}\n      </div>\n      <Notice>상위 40등까지 조회할 수 있습니다.</Notice>\n      <Notice>선수 이름 클릭 시 상세 정보 페이지로 이동합니다.</Notice>\n    </div>\n  );\n};\n\nexport default RecordsPresenter;\n","import RecordsContainer from \"./RecordsContainer\";\n\nexport default RecordsContainer;\n","import React, { useState, useEffect, ChangeEvent, MouseEvent } from \"react\";\nimport apis from \"../../apis\";\nimport RecordsPresenter from \"./RecordsPresenter\";\nimport { IBatterStatObj, IPitcherObj } from \"../../interfaces/stat\";\n\ninterface IBatters {\n  [year: number]: IBatterStatObj[];\n}\n\ninterface IPitchers {\n  [year: number]: IPitcherObj[];\n}\n\nconst RecordsContainer: React.FC<{}> = () => {\n  const [batters, setBatters] = useState<IBatterStatObj[] | null>(null);\n  const [pitchers, setPitchers] = useState<IPitcherObj[] | null>(null);\n  const [years, setYears] = useState<number[] | null>(null);\n  const [\n    batterPlayersWithYear,\n    setBatterPlayerWithYear,\n  ] = useState<IBatters | null>(null);\n  const [\n    pitcherPlayersWithYear,\n    setPitcherPlayerWithYear,\n  ] = useState<IPitchers | null>(null);\n  const [isBatter, setIsBatter] = useState<boolean>(true);\n  const [currentYear, setCurrentYear] = useState<number>(2019);\n  const [sortBKey, setBSortKey] = useState<string>(\"AVG\");\n  const [sortPKey, setPSortKey] = useState<string>(\"W\");\n  const [sortBatter, setSortBatter] = useState<IBatterStatObj[] | null>(null);\n  const [sortPitcher, setSortPitcher] = useState<IPitcherObj[] | null>(null);\n  useEffect(() => {\n    const fetchAllPlayersStat = async () => {\n      try {\n        let _years = new Set();\n        const {\n          data: { yearly: batters },\n        } = await apis.fetchAllPlayersBatterStat();\n        const {\n          data: { yearly: pitchers },\n        } = await apis.fetchAllPlayersPithcherStat();\n        console.log(batters);\n        console.log(pitchers);\n        setBatters(batters);\n        setPitchers(pitchers);\n        batters.forEach((b: IBatterStatObj) => {\n          _years.add(b.year);\n        });\n        let years = Array.from(_years) as number[];\n        years.sort((a, b) => b - a);\n        setYears(years);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    fetchAllPlayersStat();\n  }, []);\n\n  useEffect(() => {\n    if (years && batters && pitchers) {\n      let batterPlayersWithYear: any = {};\n      years.forEach((year) => {\n        let batterArr = batters.filter(\n          (batter) => batter.year === year && batter.PA >= 20\n        );\n        batterPlayersWithYear[year] = batterArr;\n      });\n      let pitcherPlayersWithYear: any = {};\n      years.forEach((year) => {\n        let pitcherArr = pitchers.filter((pitcher) => pitcher.year === year);\n        pitcherPlayersWithYear[year] = pitcherArr;\n      });\n      setBatterPlayerWithYear(batterPlayersWithYear);\n      setPitcherPlayerWithYear(pitcherPlayersWithYear);\n    }\n  }, [years]);\n\n  useEffect(() => {\n    if (batterPlayersWithYear && pitcherPlayersWithYear) {\n      let newBatters = batterPlayersWithYear[currentYear].sort(\n        (a: any, b: any) => b[sortBKey] - a[sortBKey]\n      );\n      setSortBatter([...newBatters]);\n      if (sortPKey === \"ERA\") {\n        let newPithers = pitcherPlayersWithYear[currentYear].sort(\n          (a: any, b: any) => a[sortPKey] - b[sortPKey]\n        );\n        setSortPitcher([...newPithers]);\n      } else {\n        let newPithers = pitcherPlayersWithYear[currentYear].sort(\n          (a: any, b: any) => b[sortPKey] - a[sortPKey]\n        );\n        setSortPitcher([...newPithers]);\n      }\n    }\n  }, [\n    batterPlayersWithYear,\n    pitcherPlayersWithYear,\n    currentYear,\n    sortBKey,\n    sortPKey,\n  ]);\n\n  useEffect(() => {\n    setBSortKey(\"AVG\");\n    setPSortKey(\"W\");\n  }, [currentYear]);\n\n  const handleYearChange = (e: ChangeEvent<HTMLSelectElement>) => {\n    setCurrentYear(parseInt(e.target.value));\n  };\n\n  const handleBatterKey = (e: any) => {\n    let key = e.target.innerText;\n    if (key === \"2B\" || key === \"3B\") {\n      key = `_${key}`;\n    }\n    if (key === \"선수명\") return false;\n    setBSortKey(key);\n  };\n\n  const handlePitcherKey = (e: any) => {\n    let key = e.target.innerText;\n    if (key === \"선수명\") return false;\n    setPSortKey(key);\n  };\n\n  const handleIsBatter = () => {\n    setIsBatter((isBatter) => !isBatter);\n  };\n\n  return (\n    <div>\n      {years === null || sortBatter === null || sortPitcher === null ? (\n        <div>Loading...</div>\n      ) : (\n        <RecordsPresenter\n          allYears={years}\n          year={currentYear}\n          batters={sortBatter}\n          pitchers={sortPitcher}\n          isBatter={isBatter}\n          handleYearChange={handleYearChange}\n          handleBatterKey={handleBatterKey}\n          handlePitcherKey={handlePitcherKey}\n          handleIsBatter={handleIsBatter}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default RecordsContainer;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { IBatterStatObj, IPitcherObj } from \"../../interfaces/stat\";\nimport { ITeamInfo } from \"../../interfaces/team\";\nimport BatterTable from \"../../components/BatterTable\";\nimport PitcherTable from \"../../components/PitcherTable\";\n\ninterface IProps {\n  teamInfo: ITeamInfo;\n  batters: IBatterStatObj[];\n  pitchers: IPitcherObj[];\n  isBatter: boolean;\n  handleIsBatter: () => void;\n}\n\nconst BtnWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  padding: 15px;\n  font-weight: 600;\n`;\n\nconst Batter: any = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  border-right: 1px solid #c2c2c2;\n  color: ${(props: any) => (props.isOn ? \"#2450aa\" : \"#000\")};\n`;\n\nconst Pitcher: any = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  color: ${(props: any) => (props.isOn ? \"#2450aa\" : \"#000\")};\n`;\n\nconst Team = styled.div`\n  width: 100%;\n  padding: 20px 15px;\n`;\n\nconst TeamName = styled.div`\n  font-size: 20px;\n  font-weight: 700;\n  margin-bottom: 10px;\n`;\n\nconst Found = styled.div`\n  font-size: 16px;\n  font-weight: 500;\n  opacity: 0.7;\n`;\n\nconst TeamsPresenter: React.FC<IProps> = ({\n  teamInfo,\n  batters,\n  pitchers,\n  isBatter,\n  handleIsBatter,\n}) => {\n  return (\n    <div>\n      <Team>\n        <TeamName>{teamInfo.teamName}</TeamName>\n        <Found>창단: {teamInfo.foundingYear}</Found>\n      </Team>\n      <div>\n        <div>\n          <BtnWrapper>\n            <Batter onClick={handleIsBatter} isOn={isBatter}>\n              타자\n            </Batter>\n            <Pitcher onClick={handleIsBatter} isOn={!isBatter}>\n              투수\n            </Pitcher>\n          </BtnWrapper>\n        </div>\n        <div>\n          {isBatter ? (\n            <BatterTable batters={batters} />\n          ) : (\n            <PitcherTable pitchers={pitchers} />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TeamsPresenter;\n","import TeamsContainer from \"./TeamsContainer\";\n\nexport default TeamsContainer;\n","import React, { useState, useEffect } from \"react\";\nimport TeamsPresenter from \"./TeamsPresenter\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { IBatterStatObj, IPitcherObj } from \"../../interfaces/stat\";\nimport { ITeamInfo } from \"../../interfaces/team\";\nimport apis from \"../../apis\";\n\ninterface IMatchProps {\n  id: string;\n}\n\nconst TeamsContainer: React.FC<RouteComponentProps<IMatchProps>> = ({\n  match,\n}) => {\n  const [teamInfo, setTeamInfo] = useState<ITeamInfo[] | null>(null);\n  const [batters, setBatters] = useState<IBatterStatObj[] | null>(null);\n  const [pitchers, setPitchers] = useState<IPitcherObj[] | null>(null);\n  const [isBatter, setIsBatter] = useState<boolean>(true);\n\n  useEffect(() => {\n    const {\n      params: { id },\n    } = match;\n    const fetchTeamInfo = async (id: number) => {\n      try {\n        const { data: teamInfo } = await apis.fetchTeamInfo(id);\n        setTeamInfo(teamInfo);\n        const {\n          data: { total: batters },\n        } = await apis.fetchTeamPlayerBatterStat(id);\n        const {\n          data: { total: pitchers },\n        } = await apis.fetchTeamPlayerPitcherStat(id);\n        batters.sort((a: any, b: any) => b.AVG - a.AVG);\n        setBatters(batters);\n        pitchers.sort((a: any, b: any) => a.ERA - b.ERA);\n        setPitchers(pitchers);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    fetchTeamInfo(parseInt(id));\n  }, []);\n\n  const handleIsBatter = () => {\n    setIsBatter((isBatter) => !isBatter);\n  };\n\n  return (\n    <div>\n      {teamInfo === null || batters === null || pitchers === null ? (\n        <div>Loading ...</div>\n      ) : (\n        <TeamsPresenter\n          teamInfo={teamInfo[0]}\n          batters={batters}\n          pitchers={pitchers}\n          isBatter={isBatter}\n          handleIsBatter={handleIsBatter}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default TeamsContainer;\n","import React, { useEffect } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 20px;\n  background-color: #2450aa;\n  color: #fff;\n  font-size: 18px;\n  font-weight: 700;\n`;\n\nconst Menu = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  background-color: #2450aa;\n  font-weight: 500;\n  display: none;\n  padding: 10px 20px;\n  color: #fff;\n`;\n\nconst List = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 10px 0;\n  padding-top: 12px;\n  border-bottom: 1px solid #d2d2d2;\n  &:last-child {\n    border: none;\n  }\n`;\n\nexport default withRouter((props) => {\n  useEffect(() => {\n    const handleClick = () => {\n      if (menu.classList.contains(\"hide\")) {\n        menu.classList.remove(\"hide\");\n        menu.style.display = \"block\";\n      } else {\n        menu.classList.add(\"hide\");\n        menu.style.display = \"none\";\n      }\n    };\n    const menu: HTMLDivElement = document.querySelector(\n      \".menu\"\n    ) as HTMLDivElement;\n    const hamburger: HTMLDivElement = document.querySelector(\n      \".hamburger\"\n    ) as HTMLDivElement;\n    hamburger.addEventListener(\"click\", handleClick);\n    return () => {\n      menu.removeEventListener(\"click\", handleClick);\n    };\n  }, []);\n  const handleButtonClick = () => {\n    const menu: HTMLDivElement = document.querySelector(\n      \".menu\"\n    ) as HTMLDivElement;\n    if (menu.classList.contains(\"hide\")) {\n      menu.classList.remove(\"hide\");\n      menu.style.display = \"block\";\n    } else {\n      menu.classList.add(\"hide\");\n      menu.style.display = \"none\";\n    }\n  };\n  return (\n    <>\n      <Wrapper>\n        <div className=\"hamburger\">\n          <i className=\"fas fa-bars\" />\n        </div>\n        <Link to=\"/\">\n          <div>DKSL</div>\n        </Link>\n        <div>\n          <i className=\"fas fa-user\"></i>\n        </div>\n      </Wrapper>\n      <Menu className=\"menu hide\" onClick={handleButtonClick}>\n        <List>\n          <Link to=\"/\">Home</Link>\n        </List>\n        <List>\n          <Link to=\"/league\">리그</Link>\n        </List>\n        <List>\n          <Link to=\"/records\">기록실</Link>\n        </List>\n        <List>\n          <Link to=\"/search\">선수 정보</Link>\n        </List>\n        <List>문자 중계</List>\n      </Menu>\n    </>\n  );\n});\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport Home from \"../routes/Home\";\nimport Main from \"../routes/Main\";\nimport NotFound from \"../routes/NotFound\";\nimport Stat from \"../routes/Stat\";\nimport Search from \"../routes/Search\";\nimport League from \"../routes/League\";\nimport Records from \"../routes/Records\";\nimport Teams from \"../routes/Teams\";\nimport Header from \"./Header\";\n\nexport default () => (\n  <>\n    <Router>\n      <Header />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/league\" component={League} />\n        <Route path=\"/live/:id\" component={Main} />\n        <Route path=\"/records\" component={Records} />\n        <Route path=\"/stat/:id\" component={Stat} />\n        <Route path=\"/teams/:id\" component={Teams} />\n        <Route exact path=\"/search\" component={Search} />\n        <Route path=\"/404\" component={NotFound} />\n        <Redirect path=\"*\" to=\"/404\" />\n      </Switch>\n    </Router>\n  </>\n);\n","import { createGlobalStyle } from \"styled-components\";\nimport { reset } from \"styled-reset\";\n\nconst GlobalStyle = createGlobalStyle`\n    ${reset};\n    * {\n        box-sizing: border-box;\n        font-family: 'Noto Sans KR', sans-serif !important;\n    }\n    a {\n        text-decoration: none;\n        color: inherit;\n    }\n    button {\n        &:focus {\n          outline: none; \n        }\n    }\n`;\n\nexport default GlobalStyle;\n","import React from \"react\";\nimport Router from \"./Router\";\nimport GlobalStyle from \"./GlobalStyle\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\nconst App: React.FC<{}> = () => {\n  return (\n    <>\n      <GlobalStyle />\n      <Router />\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}