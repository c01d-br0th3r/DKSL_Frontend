{"version":3,"sources":["components/Record.tsx","components/Scoreboard.tsx","routes/Main/index.tsx","routes/NotFound/index.tsx","routes/Stat/StatPresenter.tsx","apis.ts","routes/Stat/index.tsx","routes/Stat/StatContainer.tsx","components/Router.tsx","components/GlobalStyle.tsx","components/App.tsx","serviceWorker.ts","index.tsx"],"names":["Away","styled","div","Home","Name","Table","table","TitleTr","tr","Pinch","span","SLink","Link","Record","live","away","name","batterInfo","map","info","batters","batter","index","key","to","ID","now","stat","AB","H","_2B","_3B","RBI","R","HR","BB","HBP","pitcherInfo","pitcher","IP","ER","SO","NP","home","ScoreContainer","TeamScore","Team","Score","VSContainer","Ground","Board","Inning","TotalScore","td","Scoreboard","useState","awayHits","setAwayHits","homeHits","setHomeHits","awayErr","setAwayErr","homeErr","setHomeErr","awayBB","setAwayBB","homeBB","setHomeBB","useEffect","awayBatterInfo","homeBatterInfo","forEach","E","totalScore","ground","split","score","s","nowInning","nowTopBottom","socket","socketio","connect","inning","BroadcastContainer","ButtonContainer","Button","button","props","disabled","NavigationContainer","Nav","Textcast","Main","match","setLive","currentInning","setCurrentInning","isBroadcast","setIsBroadcast","emit","params","id","on","console","log","handleClick","e","target","parseInt","innerText","onClick","inn","dangerouslySetInnerHTML","__html","textCast","NotFound","Header","TeamName","Birth","Img","Info","Container","PlayerInfo","Total","TableWrapper","BtnWrapper","Batter","isOn","Pitcher","StatPresenter","isBatter","setIsBatter","isPitcher","setIsPitcher","batter_stat","i","player_info","p","pitcher_stat","window","history","back","teamName","playerName","backNum","birthday","substring","join","total","AVG","toFixed","G","PA","TB","SB","CS","SAC","SF","IBB","GDP","SLG","OBP","OPS","yearly","y","year","ERA","W","L","HLD","SV","BK","Batters","K","WP","api","axios","create","baseURL","apis","fetchLeague","get","fetchLeagueTeams","fetchTeamPlayers","fetchPlayerStat","fetchTeamInfo","StatContainer","setStat","a","data","fetchStat","path","component","Stat","GlobalStyle","createGlobalStyle","reset","App","Router","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.447de9a0.chunk.js","sourcesContent":["import React from \"react\";\nimport { ILive } from \"../interfaces/live\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\ninterface IProps {\n  live: ILive;\n}\n\nconst Away = styled.div`\n  padding-bottom: 20px;\n`;\n\nconst Home = styled.div`\n  padding-bottom: 20px;\n`;\n\nconst Name = styled.div`\n  font-size: 20px;\n  font-weight: 700;\n  padding: 20px 0;\n  padding-left: 10px;\n`;\n\nconst Table = styled.table`\n  width: 100%;\n  td {\n    text-align: center;\n    padding: 10px 0;\n    padding-top: 13px;\n    font-size: 13px;\n    border-bottom: 1px solid #f2f2f2;\n  }\n`;\n\nconst TitleTr = styled.tr`\n  background-color: #2450aa;\n  color: #fff;\n  font-weight: 500;\n  font-size: 12px;\n`;\n\nconst Pinch = styled.span`\n  font-size: 10px;\n  opacity: 0.7;\n`;\n\nconst SLink = styled(Link)`\n  width: 100%;\n  text-align: center;\n`;\n\nconst Record: React.FC<IProps> = ({ live }) => {\n  return (\n    <div>\n      <Away>\n        <Name>{live.away.name}</Name>\n        <Table>\n          <tbody>\n            <TitleTr>\n              <td></td>\n              <td>타수</td>\n              <td>안타</td>\n              <td>2루타</td>\n              <td>3루타</td>\n              <td>타점</td>\n              <td>득점</td>\n              <td>홈런</td>\n              <td>볼넷</td>\n            </TitleTr>\n            {live.away.batterInfo.map((info) => {\n              return info.batters.map((batter, index) => (\n                <tr key={index}>\n                  <td>\n                    <SLink to={`/stat/${batter.ID}`}>\n                      {batter.name}{\" \"}\n                      {info.now !== 0 && index !== 0 && <Pinch>대</Pinch>}\n                    </SLink>\n                  </td>\n                  <td>{batter.stat.AB}</td>\n                  <td>{batter.stat.H}</td>\n                  <td>{batter.stat._2B}</td>\n                  <td>{batter.stat._3B}</td>\n                  <td>{batter.stat.RBI}</td>\n                  <td>{batter.stat.R}</td>\n                  <td>{batter.stat.HR}</td>\n                  <td>{batter.stat.BB + batter.stat.HBP}</td>\n                </tr>\n              ));\n            })}\n          </tbody>\n        </Table>\n        <Table>\n          <tbody>\n            <TitleTr>\n              <td></td>\n              <td>이닝</td>\n              <td>자책</td>\n              <td>볼넷</td>\n              <td>삼진</td>\n              <td>피안타</td>\n              <td>투구수</td>\n            </TitleTr>\n            {live.away.pitcherInfo.map((pitcher, index) => (\n              <tr key={index}>\n                <td>{pitcher.name}</td>\n                <td>{pitcher.stat.IP}</td>\n                <td>{pitcher.stat.ER}</td>\n                <td>{pitcher.stat.BB}</td>\n                <td>{pitcher.stat.SO}</td>\n                <td>{pitcher.stat.H}</td>\n                <td>{pitcher.stat.NP}</td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </Away>\n      <Home>\n        <Name>{live.home.name}</Name>\n        <Table>\n          <tbody>\n            <TitleTr>\n              <td></td>\n              <td>타수</td>\n              <td>안타</td>\n              <td>2루타</td>\n              <td>3루타</td>\n              <td>타점</td>\n              <td>득점</td>\n              <td>홈런</td>\n              <td>볼넷</td>\n            </TitleTr>\n            {live.home.batterInfo.map((info) => {\n              return info.batters.map((batter, index) => (\n                <tr key={index}>\n                  <td>\n                    <SLink to={`/stat/${batter.ID}`}>\n                      {batter.name}{\" \"}\n                      {info.now !== 0 && index !== 0 && <Pinch>대</Pinch>}\n                    </SLink>\n                  </td>\n                  <td>{batter.stat.AB}</td>\n                  <td>{batter.stat.H}</td>\n                  <td>{batter.stat._2B}</td>\n                  <td>{batter.stat._3B}</td>\n                  <td>{batter.stat.RBI}</td>\n                  <td>{batter.stat.R}</td>\n                  <td>{batter.stat.HR}</td>\n                  <td>{batter.stat.BB + batter.stat.HBP}</td>\n                </tr>\n              ));\n            })}\n          </tbody>\n        </Table>\n        <Table>\n          <tbody>\n            <TitleTr>\n              <td></td>\n              <td>이닝</td>\n              <td>자책</td>\n              <td>볼넷</td>\n              <td>삼진</td>\n              <td>피안타</td>\n              <td>투구수</td>\n            </TitleTr>\n            {live.home.pitcherInfo.map((pitcher, index) => (\n              <tr key={index}>\n                <td>{pitcher.name}</td>\n                <td>{pitcher.stat.IP}</td>\n                <td>{pitcher.stat.ER}</td>\n                <td>{pitcher.stat.BB}</td>\n                <td>{pitcher.stat.SO}</td>\n                <td>{pitcher.stat.H}</td>\n                <td>{pitcher.stat.NP}</td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </Home>\n    </div>\n  );\n};\n\nexport default Record;\n","import React, { useState, useEffect } from \"react\";\nimport { ILive } from \"../interfaces/live\";\nimport styled from \"styled-components\";\n\ninterface IProps {\n  live: ILive;\n}\n\nconst ScoreContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 25px 5px;\n  background-color: #2450aa;\n  color: #fff;\n`;\n\nconst TeamScore = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Team = styled.div`\n  font-size: 15px;\n  font-weight: 600;\n  margin-bottom: 15px;\n  opacity: 0.8;\n`;\n\nconst Score = styled.div`\n  font-size: 44px;\n  font-weight: 700;\n`;\n\nconst VSContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  font-size: 16px;\n  font-weight: 700;\n  position: relative;\n`;\n\nconst Ground = styled.div`\n  width: 100%;\n  position: absolute;\n  top: 25px;\n  font-size: 12px;\n  font-weight: 500;\n  opacity: 0.8;\n  text-align: center;\n`;\n\nconst Board = styled.div`\n  width: 100%;\n  background-color: #1d4aa1;\n  color: #fff;\n  padding: 10px 5px;\n  display: flex;\n  justify-content: center;\n  font-size: 14px;\n`;\n\nconst Table = styled.table`\n  width: 100%;\n  text-align: center;\n  td {\n    padding: 5px 4px;\n  }\n`;\n\nconst Inning = styled.tr`\n  opacity: 0.7;\n  td {\n    padding-bottom: 10px;\n  }\n`;\n\nconst TotalScore = styled.td`\n  color: #7efff5;\n`;\n\nconst Scoreboard: React.FC<IProps> = ({ live }) => {\n  const [awayHits, setAwayHits] = useState<number>(0);\n  const [homeHits, setHomeHits] = useState<number>(0);\n  const [awayErr, setAwayErr] = useState<number>(0);\n  const [homeErr, setHomeErr] = useState<number>(0);\n  const [awayBB, setAwayBB] = useState<number>(0);\n  const [homeBB, setHomeBB] = useState<number>(0);\n  useEffect(() => {\n    const awayBatterInfo = live.away.batterInfo;\n    const homeBatterInfo = live.home.batterInfo;\n    let awayHits = 0,\n      homeHits = 0,\n      awayErr = 0,\n      homeErr = 0,\n      awayBB = 0,\n      homeBB = 0;\n    awayBatterInfo.forEach((away) => {\n      away.batters.forEach((batter) => {\n        awayHits += batter.stat.H;\n        awayErr += batter.stat.E;\n        awayBB += batter.stat.BB;\n        awayBB += batter.stat.HBP;\n      });\n    });\n    homeBatterInfo.forEach((home) => {\n      home.batters.forEach((batter) => {\n        homeHits += batter.stat.H;\n        homeErr += batter.stat.E;\n        homeBB += batter.stat.BB;\n        homeBB += batter.stat.HBP;\n      });\n    });\n    setAwayHits(awayHits);\n    setHomeHits(homeHits);\n    setAwayErr(awayErr);\n    setHomeErr(homeErr);\n    setAwayBB(awayBB);\n    setHomeBB(homeBB);\n  }, [live]);\n  return (\n    <div>\n      <ScoreContainer>\n        <TeamScore>\n          <Team>{live.away.name}</Team>\n          <Score>{live.away.totalScore}</Score>\n        </TeamScore>\n        <VSContainer>\n          <div>VS</div>\n          <Ground>{live.ground}</Ground>\n        </VSContainer>\n        <TeamScore>\n          <Team>{live.home.name}</Team>\n          <Score>{live.home.totalScore}</Score>\n        </TeamScore>\n      </ScoreContainer>\n      <Board>\n        <Table>\n          <tbody>\n            <Inning>\n              <td></td>\n              <td>1</td>\n              <td>2</td>\n              <td>3</td>\n              <td>4</td>\n              <td>5</td>\n              <td>6</td>\n              <td>7</td>\n              <td>8</td>\n              <td>9</td>\n              <TotalScore>R</TotalScore>\n              <td>H</td>\n              <td>E</td>\n              <td>B</td>\n            </Inning>\n            <tr>\n              <td>{live.away.name.split(\" \")[0]}</td>\n              {live.away.score.map((s, index) => (\n                <td key={index}>{live.nowInning - 1 >= index ? s : \"\"}</td>\n              ))}\n              <TotalScore>{live.away.totalScore}</TotalScore>\n              <td>{awayHits}</td>\n              <td>{homeErr}</td>\n              <td>{awayBB}</td>\n            </tr>\n            <tr>\n              <td>{live.home.name.split(\" \")[0]}</td>\n              {live.home.score.map((s, index) => (\n                <td key={index}>\n                  {live.nowInning - 1 > index\n                    ? s\n                    : live.nowInning - 1 === index && live.nowTopBottom\n                    ? s\n                    : \"\"}\n                </td>\n              ))}\n              <TotalScore>{live.home.totalScore}</TotalScore>\n              <td>{homeHits}</td>\n              <td>{awayErr}</td>\n              <td>{homeBB}</td>\n            </tr>\n          </tbody>\n        </Table>\n      </Board>\n    </div>\n  );\n};\n\nexport default Scoreboard;\n","import React, { useState, useEffect } from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport socketio from \"socket.io-client\";\nimport styled from \"styled-components\";\nimport { ILive } from \"../..//interfaces/live\";\nimport Record from \"../../components/Record\";\nimport Scoreboard from \"../../components/Scoreboard\";\nimport \"./Main.css\";\n\nconst socket: any = socketio.connect(\"http://49.50.172.42:3002/\");\nconst inning: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\ninterface MatchParams {\n  id: string;\n}\n\nconst BroadcastContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ButtonContainer = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  background-color: #5d93d2;\n  overflow: scroll;\n`;\n\nconst Button: any = styled.button`\n  width: 100%;\n  padding: 10px 0;\n  background-color: ${(props) => (props.disabled ? \"#5d93d2\" : \"#1D4AA0\")};\n  color: #fff;\n  font-weight: 600;\n  opacity: ${(props) => (props.disabled ? \"0.7\" : \"1\")};\n  border: none;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: ${(props) => (props.disabled ? \"default\" : \"pointer\")}; ;\n`;\n\nconst NavigationContainer = styled.div`\n  width: 100%;\n  display: flex;\n`;\n\nconst Nav: any = styled.button`\n  width: 100%;\n  background-color: #2450aa;\n  border: none;\n  padding: 10px;\n  color: #fff;\n  font-weight: 500;\n  cursor: pointer;\n`;\n\nconst Textcast = styled.div`\n  padding: 10px;\n`;\n\nconst Main: React.FC<RouteComponentProps<MatchParams>> = ({ match }) => {\n  const [live, setLive] = useState<ILive | null>(null);\n  const [currentInning, setCurrentInning] = useState<number>(-1);\n  const [isBroadcast, setIsBroadcast] = useState<boolean>(true);\n  useEffect(() => {\n    socket.emit(\"joinLive\", match.params.id);\n    socket.emit(\"getLiveCast\", match.params.id);\n    // 전송 누를 때마다\n    socket.on(\"sendLiveCast\", (live: ILive) => {\n      console.log(live);\n      setLive(live);\n      setCurrentInning(live.nowInning);\n    });\n    socket.on(\"liveCast\", (live: ILive) => {\n      console.log(live);\n      setLive(live);\n      setCurrentInning(live.nowInning);\n    });\n  }, []);\n  const handleClick = (e: any) => {\n    const target = e.target as HTMLButtonElement;\n    setCurrentInning(parseInt(target.innerText));\n  };\n  useEffect(() => {\n    console.log(currentInning);\n  }, [currentInning]);\n  return (\n    <div>\n      {live === null ? (\n        <div>No Game</div>\n      ) : (\n        <>\n          <Scoreboard live={{ ...live }} />\n          <NavigationContainer>\n            <Nav onClick={() => setIsBroadcast(true)}>중계</Nav>\n            <Nav onClick={() => setIsBroadcast(false)}>기록</Nav>\n          </NavigationContainer>\n          {isBroadcast ? (\n            <BroadcastContainer>\n              <ButtonContainer>\n                {inning.map((inn) => (\n                  <Button\n                    inning={inn}\n                    key={inn}\n                    onClick={handleClick}\n                    disabled={live.nowInning < inn}\n                  >\n                    {`${inn}회`}\n                  </Button>\n                ))}\n              </ButtonContainer>\n              <Textcast\n                dangerouslySetInnerHTML={{\n                  __html:\n                    currentInning === -1\n                      ? live.textCast[0]\n                      : live.textCast[currentInning - 1],\n                }}\n              />\n            </BroadcastContainer>\n          ) : (\n            <Record live={live} />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Main;\n","import React from \"react\";\n\nconst NotFound: React.FC<{}> = () => {\n  return <div>404 Not Found</div>;\n};\n\nexport default NotFound;\n","import React, { useState } from \"react\";\nimport { IStat } from \"../../interfaces/stat\";\nimport styled from \"styled-components\";\n\ninterface IStatProps {\n  stat: IStat;\n}\n\nconst Header = styled.div`\n  padding: 15px 10px;\n  background-color: #2450aa;\n  color: #fff;\n`;\n\nconst TeamName = styled.div`\n  font-size: 18px;\n  font-weight: 600;\n  margin-bottom: 10px;\n`;\n\nconst Name = styled.div`\n  font-size: 16px;\n  font-weight: 500;\n  margin-bottom: 10px;\n`;\n\nconst Birth = styled.div``;\n\nconst Img = styled.div`\n  width: 100%;\n  height: 200px;\n  border: 1px solid gray;\n  margin-right: 30px;\n`;\n\nconst Info = styled.div`\n  width: 100%;\n  text-align: left;\n`;\n\nconst Container = styled.div`\n  width: 100%;\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst PlayerInfo = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nconst Total = styled.div`\n  font-size: 20px;\n  font-weight: 600;\n  margin-bottom: 20px;\n`;\n\nconst Record = styled.div`\n  width: 100%;\n  font-size: 16px;\n`;\n\nconst TableWrapper = styled.div`\n  width: 100%;\n  overflow: scroll;\n`;\n\nconst Table = styled.table`\n  width: 100%;\n  td {\n    text-align: center;\n    padding: 10px 15px;\n    padding-top: 12px;\n    white-space: nowrap;\n    font-weight: 500;\n  }\n  tr:nth-child(1) {\n    background-color: #2450aa;\n    color: #fff;\n    font-weight: 600;\n  }\n`;\n\nconst BtnWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  margin-bottom: 10px;\n  font-weight: 600;\n`;\n\nconst Batter: any = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  border-right: 1px solid #c2c2c2;\n  color: ${(props: any) => (props.isOn ? \"#2450aa\" : \"#000\")};\n`;\n\nconst Pitcher: any = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  color: ${(props: any) => (props.isOn ? \"#2450aa\" : \"#000\")};\n`;\n\nconst StatPresenter: React.FC<IStatProps> = ({ stat }) => {\n  const [isBatter, setIsBatter] = useState<boolean>(true);\n  const [isPitcher, setIsPitcher] = useState<boolean>(false);\n  const { batter_stat: s, player_info: i, pitcher_stat: p } = stat;\n  const handleClick = () => {\n    window.history.back();\n  };\n  const handleBatter = () => {\n    setIsBatter(true);\n    setIsPitcher(false);\n  };\n  const handlePitcher = () => {\n    setIsBatter(false);\n    setIsPitcher(true);\n  };\n  console.log(stat);\n  return (\n    <>\n      <Header>\n        <div onClick={handleClick}>뒤로 가기</div>\n      </Header>\n      <Container>\n        <PlayerInfo>\n          <Img>stat.img</Img>\n          <Info>\n            <TeamName>{i.teamName}</TeamName>\n            <Name>\n              {i.playerName} No. {i.backNum}\n            </Name>\n            <Birth>{i.birthday.substring(0, 10).split(\"-\").join(\"/\")}</Birth>\n          </Info>\n        </PlayerInfo>\n        <Record>\n          <Total>선수 기록 - {isBatter ? \"타자\" : \"투수\"}</Total>\n          <BtnWrapper>\n            <Batter onClick={handleBatter} isOn={isBatter}>\n              타자\n            </Batter>\n            <Pitcher onClick={handlePitcher} isOn={isPitcher}>\n              투수\n            </Pitcher>\n          </BtnWrapper>\n          {isBatter ? (\n            <TableWrapper>\n              <Table>\n                <tbody>\n                  <tr>\n                    <td>시즌</td>\n                    <td>AVG</td>\n                    <td>G</td>\n                    <td>PA</td>\n                    <td>AB</td>\n                    <td>R</td>\n                    <td>H</td>\n                    <td>2B</td>\n                    <td>3B</td>\n                    <td>HR</td>\n                    <td>TB</td>\n                    <td>RBI</td>\n                    <td>SB</td>\n                    <td>CS</td>\n                    <td>SAC</td>\n                    <td>SF</td>\n                    <td>BB</td>\n                    <td>IBB</td>\n                    <td>HBP</td>\n                    <td>SO</td>\n                    <td>GDP</td>\n                    <td>SLG</td>\n                    <td>OBP</td>\n                    <td>OPS</td>\n                  </tr>\n                  <tr>\n                    <td>통산</td>\n                    <td>{s.total.AVG && s.total.AVG.toFixed(3)}</td>\n                    <td>{s.total.G}</td>\n                    <td>{s.total.PA}</td>\n                    <td>{s.total.AB}</td>\n                    <td>{s.total.R}</td>\n                    <td>{s.total.H}</td>\n                    <td>{s.total._2B}</td>\n                    <td>{s.total._3B}</td>\n                    <td>{s.total.HR}</td>\n                    <td>{s.total.TB}</td>\n                    <td>{s.total.RBI}</td>\n                    <td>{s.total.SB}</td>\n                    <td>{s.total.CS}</td>\n                    <td>{s.total.SAC}</td>\n                    <td>{s.total.SF}</td>\n                    <td>{s.total.BB}</td>\n                    <td>{s.total.IBB}</td>\n                    <td>{s.total.HBP}</td>\n                    <td>{s.total.SO}</td>\n                    <td>{s.total.GDP}</td>\n                    <td>{s.total.SLG && s.total.SLG.toFixed(3)}</td>\n                    <td>{s.total.OBP && s.total.OBP.toFixed(3)}</td>\n                    <td>{s.total.OPS && s.total.OPS.toFixed(3)}</td>\n                  </tr>\n                  {s.yearly.map((y) => (\n                    <tr key={y.year}>\n                      <td>{y.year}</td>\n                      <td>{y.AVG && y.AVG.toFixed(3)}</td>\n                      <td>{y.G}</td>\n                      <td>{y.PA}</td>\n                      <td>{y.AB}</td>\n                      <td>{y.R}</td>\n                      <td>{y.H}</td>\n                      <td>{y._2B}</td>\n                      <td>{y._3B}</td>\n                      <td>{y.HR}</td>\n                      <td>{y.TB}</td>\n                      <td>{y.RBI}</td>\n                      <td>{y.SB}</td>\n                      <td>{y.CS}</td>\n                      <td>{y.SAC}</td>\n                      <td>{y.SF}</td>\n                      <td>{y.BB}</td>\n                      <td>{y.IBB}</td>\n                      <td>{y.HBP}</td>\n                      <td>{y.SO}</td>\n                      <td>{y.GDP}</td>\n                      <td>{y.SLG && y.SLG.toFixed(3)}</td>\n                      <td>{y.OBP && y.OBP.toFixed(3)}</td>\n                      <td>{y.OPS && y.OPS.toFixed(3)}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </Table>\n            </TableWrapper>\n          ) : (\n            <TableWrapper>\n              <Table>\n                <tbody>\n                  <tr>\n                    <td>시즌</td>\n                    <td>ERA</td>\n                    <td>G</td>\n                    <td>W</td>\n                    <td>L</td>\n                    <td>HLD</td>\n                    <td>SV</td>\n                    <td>IP</td>\n                    <td>H</td>\n                    <td>AB</td>\n                    <td>BB</td>\n                    <td>BK</td>\n                    <td>Batters</td>\n                    <td>ER</td>\n                    <td>HBP</td>\n                    <td>HR</td>\n                    <td>K</td>\n                    <td>NP</td>\n                    <td>R</td>\n                    <td>SAC</td>\n                    <td>SF</td>\n                    <td>WP</td>\n                  </tr>\n                  <tr>\n                    <td>통산</td>\n                    <td>{p.total.ERA && p.total.ERA.toFixed(2)}</td>\n                    <td>{p.total.G}</td>\n                    <td>{p.total.W}</td>\n                    <td>{p.total.L}</td>\n                    <td>{p.total.HLD}</td>\n                    <td>{p.total.SV}</td>\n                    <td>{p.total.IP}</td>\n                    <td>{p.total.H}</td>\n                    <td>{p.total.AB}</td>\n                    <td>{p.total.BB}</td>\n                    <td>{p.total.BK}</td>\n                    <td>{p.total.Batters}</td>\n                    <td>{p.total.ER}</td>\n                    <td>{p.total.HBP}</td>\n                    <td>{p.total.HR}</td>\n                    <td>{p.total.K}</td>\n                    <td>{p.total.NP}</td>\n                    <td>{p.total.R}</td>\n                    <td>{p.total.SAC}</td>\n                    <td>{p.total.SF}</td>\n                    <td>{p.total.WP}</td>\n                  </tr>\n                  {p.yearly.map((y) => (\n                    <tr key={y.year}>\n                      <td>{y.year}</td>\n                      <td>{y.ERA && y.ERA.toFixed(2)}</td>\n                      <td>{y.G}</td>\n                      <td>{y.W}</td>\n                      <td>{y.L}</td>\n                      <td>{y.HLD}</td>\n                      <td>{y.SV}</td>\n                      <td>{y.IP}</td>\n                      <td>{y.H}</td>\n                      <td>{y.AB}</td>\n                      <td>{y.BB}</td>\n                      <td>{y.BK}</td>\n                      <td>{y.Batters}</td>\n                      <td>{y.ER}</td>\n                      <td>{y.HBP}</td>\n                      <td>{y.HR}</td>\n                      <td>{y.K}</td>\n                      <td>{y.NP}</td>\n                      <td>{y.R}</td>\n                      <td>{y.SAC}</td>\n                      <td>{y.SF}</td>\n\n                      <td>{y.WP}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </Table>\n            </TableWrapper>\n          )}\n        </Record>\n      </Container>\n    </>\n  );\n};\n\nexport default StatPresenter;\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"http://49.50.172.42:3001/\",\n});\n\nconst apis = {\n  fetchLeague: () => api.get(`getLeagues`),\n  fetchLeagueTeams: (id: number) => api.get(`getLeagueTeams/${id}`),\n  fetchTeamPlayers: (id: number) => api.get(`getTeamPlayers/${id}`),\n  fetchPlayerStat: (id: number) => api.get(`getPlayerStat/${id}`),\n  fetchTeamInfo: (id: number) => api.get(`getTeamInfo/${id}`),\n};\n\nexport default apis;\n","import StatContainer from \"./StatContainer\";\n\nexport default StatContainer;\n","import React, { useState, useEffect } from \"react\";\nimport StatPresenter from \"./StatPresenter\";\nimport { IStat } from \"../../interfaces/stat\";\nimport apis from \"../../apis\";\nimport { RouteComponentProps } from \"react-router-dom\";\n\ninterface MatchProps {\n  id: string;\n}\n\nconst StatContainer: React.FC<RouteComponentProps<MatchProps>> = ({\n  match,\n}) => {\n  const [stat, setStat] = useState<IStat | null>(null);\n  useEffect(() => {\n    const fetchStat = async (id: number) => {\n      try {\n        const { data: stat } = await apis.fetchPlayerStat(id);\n        setStat(stat);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    const id = parseInt(match.params.id);\n    fetchStat(id);\n  }, []);\n  return (\n    <div>\n      {stat === null ? <div>Loading...</div> : <StatPresenter stat={stat} />}\n    </div>\n  );\n};\n\nexport default StatContainer;\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport Main from \"../routes/Main\";\nimport NotFound from \"../routes/NotFound\";\nimport Stat from \"../routes/Stat\";\n\nexport default () => (\n  <>\n    <Router>\n      <Switch>\n        <Route path=\"/live/:id\" component={Main} />\n        <Route path=\"/stat/:id\" component={Stat} />\n        <Route path=\"/404\" component={NotFound} />\n        <Redirect path=\"*\" to=\"/404\" />\n      </Switch>\n    </Router>\n  </>\n);\n","import { createGlobalStyle } from \"styled-components\";\nimport { reset } from \"styled-reset\";\n\nconst GlobalStyle = createGlobalStyle`\n    ${reset};\n    * {\n        box-sizing: border-box;\n        font-family: 'Noto Sans KR', sans-serif !important;\n    }\n    a {\n        text-decoration: none;\n        color: inherit;\n    }\n    button {\n        &:focus {\n          outline: none; \n        }\n    }\n`;\n\nexport default GlobalStyle;\n","import React from \"react\";\nimport Router from \"./Router\";\nimport GlobalStyle from \"./GlobalStyle\";\n\nconst App: React.FC<{}> = () => {\n  return (\n    <>\n      <GlobalStyle />\n      <Router />\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}